import{_ as c,a as l,b as m}from"./BaseDisclaimerTitle.631caf82.js";import{q as b,o as g,c as _,b as n,f as t,t as h,B as k,s as e,e as s}from"./app.e6b4b7b5.js";const d={class:"markdown-body"},f=s("a",{target:"_blank",href:"https://docs.python.org/3/library/functions.html#abs"},"Python 3 documentation",-1),y=s("code",null,"__abs__()",-1),x=h(`<pre class="language-python"><code class="language-python"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token builtin">abs</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>
<span class="token comment"># 1</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token builtin">abs</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
<span class="token comment"># 0</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token builtin">abs</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
<span class="token comment"># 1</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token builtin">abs</span><span class="token punctuation">(</span><span class="token number">3.14</span><span class="token punctuation">)</span>
<span class="token comment"># 3.14</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token builtin">abs</span><span class="token punctuation">(</span><span class="token number">3</span> <span class="token operator">+</span> <span class="token number">2j</span><span class="token punctuation">)</span>
<span class="token comment"># 3.6055512754639896</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token builtin">abs</span><span class="token punctuation">(</span><span class="token number">0x10</span><span class="token punctuation">)</span>
<span class="token comment"># 16</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token builtin">abs</span><span class="token punctuation">(</span><span class="token number">0b10</span><span class="token punctuation">)</span>
<span class="token comment"># 2</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token builtin">abs</span><span class="token punctuation">(</span><span class="token number">0o20</span><span class="token punctuation">)</span>
<span class="token comment"># 16</span>
</code></pre>`,1),C="Python abs() built-in function - Python Cheatsheet",B="Return the absolute value of a number. The argument may be an integer, a floating point number, or an object implementing __abs__(). If the argument is a complex number, its magnitude is returned.",N=[{property:"og:title",content:"Python abs() built-in function - Python Cheatsheet"},{property:"og:description",content:"Return the absolute value of a number. The argument may be an integer, a floating point number, or an object implementing __abs__(). If the argument is a complex number, its magnitude is returned."},{name:"description",content:"Return the absolute value of a number. The argument may be an integer, a floating point number, or an object implementing __abs__(). If the argument is a complex number, its magnitude is returned."}],V={__name:"1-abs",setup(P,{expose:o}){const a={title:"Python abs() built-in function - Python Cheatsheet",description:"Return the absolute value of a number. The argument may be an integer, a floating point number, or an object implementing __abs__(). If the argument is a complex number, its magnitude is returned.",meta:[{property:"og:title",content:"Python abs() built-in function - Python Cheatsheet"},{property:"og:description",content:"Return the absolute value of a number. The argument may be an integer, a floating point number, or an object implementing __abs__(). If the argument is a complex number, its magnitude is returned."},{name:"description",content:"Return the absolute value of a number. The argument may be an integer, a floating point number, or an object implementing __abs__(). If the argument is a complex number, its magnitude is returned."}]};return o({frontmatter:a}),b({title:"Python abs() built-in function - Python Cheatsheet",meta:[{property:"og:title",content:"Python abs() built-in function - Python Cheatsheet"},{property:"og:description",content:"Return the absolute value of a number. The argument may be an integer, a floating point number, or an object implementing __abs__(). If the argument is a complex number, its magnitude is returned."},{name:"description",content:"Return the absolute value of a number. The argument may be an integer, a floating point number, or an object implementing __abs__(). If the argument is a complex number, its magnitude is returned."}]}),(v,T)=>{const p=k,i=l,r=m,u=c;return g(),_("div",d,[n(p,{title:a.title,description:a.description},{default:t(()=>[e(" Python abs() built-in function ")]),_:1},8,["title","description"]),n(u,null,{default:t(()=>[n(i,null,{default:t(()=>[e(" From the "),f]),_:1}),n(r,null,{default:t(()=>[e(" Return the absolute value of a number. The argument may be an integer, a floating point number, or an object implementing "),y,e(". If the argument is a complex number, its magnitude is returned. ")]),_:1})]),_:1}),x])}}};export{V as default,B as description,N as meta,C as title};
