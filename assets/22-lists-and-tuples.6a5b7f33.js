import{_ as h,a as d,b as m}from"./BaseDisclaimerTitle.631caf82.js";import{_ as f,a as b,b as y}from"./BaseWarningTitle.f5a386c9.js";import{q as _,o as w,c as x,b as s,f as a,t as o,B as v,s as n,e as t}from"./app.e6b4b7b5.js";const T={class:"markdown-body"},P=o(`<p>Lists are one of the 4 data types in Python used to store collections of data.</p><pre class="language-python"><code class="language-python"><span class="token punctuation">[</span><span class="token string">&#39;John&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Peter&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Debora&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Charles&#39;</span><span class="token punctuation">]</span>
</code></pre><h2 id="getting-values-with-indexes" tabindex="-1">Getting values with indexes</h2><pre class="language-python"><code class="language-python"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> furniture <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;table&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;chair&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;rack&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;shelf&#39;</span><span class="token punctuation">]</span>

<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> furniture<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
<span class="token comment"># &#39;table&#39;</span>

<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> furniture<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>
<span class="token comment"># &#39;chair&#39;</span>

<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> furniture<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>
<span class="token comment"># &#39;rack&#39;</span>

<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> furniture<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span>
<span class="token comment"># &#39;shelf&#39;</span>
</code></pre><h2 id="negative-indexes" tabindex="-1">Negative indexes</h2><pre class="language-python"><code class="language-python"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> furniture <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;table&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;chair&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;rack&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;shelf&#39;</span><span class="token punctuation">]</span>

<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> furniture<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>
<span class="token comment"># &#39;shelf&#39;</span>

<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> furniture<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">]</span>
<span class="token comment"># &#39;chair&#39;</span>

<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token string-interpolation"><span class="token string">f&#39;The </span><span class="token interpolation"><span class="token punctuation">{</span>furniture<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span><span class="token string"> is bigger than the </span><span class="token interpolation"><span class="token punctuation">{</span>furniture<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span><span class="token string">&#39;</span></span>
<span class="token comment"># &#39;The shelf is bigger than the chair&#39;</span>
</code></pre><h2 id="getting-sublists-with-slices" tabindex="-1">Getting sublists with Slices</h2><pre class="language-python"><code class="language-python"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> furniture <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;table&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;chair&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;rack&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;shelf&#39;</span><span class="token punctuation">]</span>

<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> furniture<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">4</span><span class="token punctuation">]</span>
<span class="token comment"># [&#39;table&#39;, &#39;chair&#39;, &#39;rack&#39;, &#39;shelf&#39;]</span>

<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> furniture<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">]</span>
<span class="token comment"># [&#39;chair&#39;, &#39;rack&#39;]</span>

<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> furniture<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>
<span class="token comment"># [&#39;table&#39;, &#39;chair&#39;, &#39;rack&#39;]</span>

<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> furniture<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span>
<span class="token comment"># [&#39;table&#39;, &#39;chair&#39;]</span>

<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> furniture<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span>
<span class="token comment"># [&#39;chair&#39;, &#39;rack&#39;, &#39;shelf&#39;]</span>

<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> furniture<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">]</span>
<span class="token comment"># [&#39;table&#39;, &#39;chair&#39;, &#39;rack&#39;, &#39;shelf&#39;]</span>
</code></pre><p>Slicing the complete list will perform a copy:</p><pre class="language-python"><code class="language-python"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> spam2 <span class="token operator">=</span> spam<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">]</span>
<span class="token comment"># [&#39;cat&#39;, &#39;bat&#39;, &#39;rat&#39;, &#39;elephant&#39;]</span>

<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> spam<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">&#39;dog&#39;</span><span class="token punctuation">)</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> spam
<span class="token comment"># [&#39;cat&#39;, &#39;bat&#39;, &#39;rat&#39;, &#39;elephant&#39;, &#39;dog&#39;]</span>

<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> spam2
<span class="token comment"># [&#39;cat&#39;, &#39;bat&#39;, &#39;rat&#39;, &#39;elephant&#39;]</span>
</code></pre><h2 id="getting-a-list-length-with-len" tabindex="-1">Getting a list length with len()</h2><pre class="language-python"><code class="language-python"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> furniture <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;table&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;chair&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;rack&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;shelf&#39;</span><span class="token punctuation">]</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token builtin">len</span><span class="token punctuation">(</span>furniture<span class="token punctuation">)</span>
<span class="token comment"># 4</span>
</code></pre><h2 id="changing-values-with-indexes" tabindex="-1">Changing values with indexes</h2><pre class="language-python"><code class="language-python"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> furniture <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;table&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;chair&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;rack&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;shelf&#39;</span><span class="token punctuation">]</span>

<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> furniture<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;desk&#39;</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> furniture
<span class="token comment"># [&#39;desk&#39;, &#39;chair&#39;, &#39;rack&#39;, &#39;shelf&#39;]</span>

<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> furniture<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> furniture<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> furniture
<span class="token comment"># [&#39;desk&#39;, &#39;chair&#39;, &#39;chair&#39;, &#39;shelf&#39;]</span>

<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> furniture<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;bed&#39;</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> furniture
<span class="token comment"># [&#39;desk&#39;, &#39;chair&#39;, &#39;chair&#39;, &#39;bed&#39;]</span>
</code></pre><h2 id="concatenation-and-replication" tabindex="-1">Concatenation and Replication</h2><pre class="language-python"><code class="language-python"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token punctuation">[</span><span class="token string">&#39;A&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;B&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;C&#39;</span><span class="token punctuation">]</span>
<span class="token comment"># [1, 2, 3, &#39;A&#39;, &#39;B&#39;, &#39;C&#39;]</span>

<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token string">&#39;X&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Y&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Z&#39;</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">3</span>
<span class="token comment"># [&#39;X&#39;, &#39;Y&#39;, &#39;Z&#39;, &#39;X&#39;, &#39;Y&#39;, &#39;Z&#39;, &#39;X&#39;, &#39;Y&#39;, &#39;Z&#39;]</span>

<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> my_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> my_list <span class="token operator">=</span> my_list <span class="token operator">+</span> <span class="token punctuation">[</span><span class="token string">&#39;A&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;B&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;C&#39;</span><span class="token punctuation">]</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> my_list
<span class="token comment"># [1, 2, 3, &#39;A&#39;, &#39;B&#39;, &#39;C&#39;]</span>
</code></pre><h2 id="using-for-loops-with-lists" tabindex="-1">Using for loops with Lists</h2><pre class="language-python"><code class="language-python"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> furniture <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;table&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;chair&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;rack&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;shelf&#39;</span><span class="token punctuation">]</span>

<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token keyword">for</span> item <span class="token keyword">in</span> furniture<span class="token punctuation">:</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>     <span class="token keyword">print</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span>
<span class="token comment"># table</span>
<span class="token comment"># chair</span>
<span class="token comment"># rack</span>
<span class="token comment"># shelf</span>
</code></pre><h2 id="getting-the-index-in-a-loop-with-enumerate" tabindex="-1">Getting the index in a loop with enumerate()</h2><pre class="language-python"><code class="language-python"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> furniture <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;table&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;chair&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;rack&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;shelf&#39;</span><span class="token punctuation">]</span>

<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token keyword">for</span> index<span class="token punctuation">,</span> item <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span>furniture<span class="token punctuation">)</span><span class="token punctuation">:</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>     <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;index: </span><span class="token interpolation"><span class="token punctuation">{</span>index<span class="token punctuation">}</span></span><span class="token string"> - item: </span><span class="token interpolation"><span class="token punctuation">{</span>item<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span>
<span class="token comment"># index: 0 - item: table</span>
<span class="token comment"># index: 1 - item: chair</span>
<span class="token comment"># index: 2 - item: rack</span>
<span class="token comment"># index: 3 - item: shelf</span>
</code></pre><h2 id="loop-in-multiple-lists-with-zip" tabindex="-1">Loop in Multiple Lists with zip()</h2><pre class="language-python"><code class="language-python"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> furniture <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;table&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;chair&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;rack&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;shelf&#39;</span><span class="token punctuation">]</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> price <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">80</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">]</span>

<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token keyword">for</span> item<span class="token punctuation">,</span> amount <span class="token keyword">in</span> <span class="token builtin">zip</span><span class="token punctuation">(</span>furniture<span class="token punctuation">,</span> price<span class="token punctuation">)</span><span class="token punctuation">:</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>     <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;The </span><span class="token interpolation"><span class="token punctuation">{</span>item<span class="token punctuation">}</span></span><span class="token string"> costs $</span><span class="token interpolation"><span class="token punctuation">{</span>amount<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span>
<span class="token comment"># The table costs $100</span>
<span class="token comment"># The chair costs $50</span>
<span class="token comment"># The rack costs $80</span>
<span class="token comment"># The shelf costs $40</span>
</code></pre><h2 id="the-in-and-not-in-operators" tabindex="-1">The in and not in operators</h2><pre class="language-python"><code class="language-python"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token string">&#39;rack&#39;</span> <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token string">&#39;table&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;chair&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;rack&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;shelf&#39;</span><span class="token punctuation">]</span>
<span class="token comment"># True</span>

<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token string">&#39;bed&#39;</span> <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token string">&#39;table&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;chair&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;rack&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;shelf&#39;</span><span class="token punctuation">]</span>
<span class="token comment"># False</span>

<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token string">&#39;bed&#39;</span> <span class="token keyword">not</span> <span class="token keyword">in</span> furniture
<span class="token comment"># True</span>

<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token string">&#39;rack&#39;</span> <span class="token keyword">not</span> <span class="token keyword">in</span> furniture
<span class="token comment"># False</span>
</code></pre><h2 id="the-multiple-assignment-trick" tabindex="-1">The Multiple Assignment Trick</h2><p>The multiple assignment trick is a shortcut that lets you assign multiple variables with the values in a list in one line of code. So instead of doing this:</p><pre class="language-python"><code class="language-python"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> furniture <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;table&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;chair&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;rack&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;shelf&#39;</span><span class="token punctuation">]</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> table <span class="token operator">=</span> furniture<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> chair <span class="token operator">=</span> furniture<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> rack <span class="token operator">=</span> furniture<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> shelf <span class="token operator">=</span> furniture<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span>
</code></pre><p>You could type this line of code:</p><pre class="language-python"><code class="language-python"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> furniture <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;table&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;chair&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;rack&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;shelf&#39;</span><span class="token punctuation">]</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> table<span class="token punctuation">,</span> chair<span class="token punctuation">,</span> rack<span class="token punctuation">,</span> shelf <span class="token operator">=</span> furniture

<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> table
<span class="token comment"># &#39;table&#39;</span>

<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> chair
<span class="token comment"># &#39;chair&#39;</span>

<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> rack
<span class="token comment"># &#39;rack&#39;</span>

<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> shelf
<span class="token comment"># &#39;shelf&#39;</span>
</code></pre><p>The multiple assignment trick can also be used to swap the values in two variables:</p><pre class="language-python"><code class="language-python"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> a<span class="token punctuation">,</span> b <span class="token operator">=</span> <span class="token string">&#39;table&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;chair&#39;</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> a<span class="token punctuation">,</span> b <span class="token operator">=</span> b<span class="token punctuation">,</span> a
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>
<span class="token comment"># chair</span>

<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token keyword">print</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span>
<span class="token comment"># table</span>
</code></pre><h2 id="the-index-method" tabindex="-1">The index Method</h2><p>The <code>index</code> method allows you to find the index of a value by passing its name:</p><pre class="language-python"><code class="language-python"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> furniture <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;table&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;chair&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;rack&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;shelf&#39;</span><span class="token punctuation">]</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> furniture<span class="token punctuation">.</span>index<span class="token punctuation">(</span><span class="token string">&#39;chair&#39;</span><span class="token punctuation">)</span>
<span class="token comment"># 1</span>
</code></pre><h2 id="adding-values" tabindex="-1">Adding Values</h2><h3 id="append" tabindex="-1">append()</h3><p><code>append</code> adds an element to the end of a <code>list</code>:</p><pre class="language-python"><code class="language-python"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> furniture <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;table&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;chair&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;rack&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;shelf&#39;</span><span class="token punctuation">]</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> furniture<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">&#39;bed&#39;</span><span class="token punctuation">)</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> furniture
<span class="token comment"># [&#39;table&#39;, &#39;chair&#39;, &#39;rack&#39;, &#39;shelf&#39;, &#39;bed&#39;]</span>
</code></pre><h3 id="insert" tabindex="-1">insert()</h3><p><code>insert</code> adds an element to a <code>list</code> at a given position:</p><pre class="language-python"><code class="language-python"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> furniture <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;table&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;chair&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;rack&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;shelf&#39;</span><span class="token punctuation">]</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> furniture<span class="token punctuation">.</span>insert<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;bed&#39;</span><span class="token punctuation">)</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> furniture
<span class="token comment"># [&#39;table&#39;, &#39;bed&#39;, &#39;chair&#39;, &#39;rack&#39;, &#39;shelf&#39;]</span>
</code></pre><h2 id="removing-values" tabindex="-1">Removing Values</h2><h3 id="del" tabindex="-1">del()</h3><p><code>del</code> removes an item using the index:</p><pre class="language-python"><code class="language-python"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> furniture <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;table&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;chair&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;rack&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;shelf&#39;</span><span class="token punctuation">]</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token keyword">del</span> furniture<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> furniture
<span class="token comment"># [&#39;table&#39;, &#39;chair&#39;, &#39;shelf&#39;]</span>

<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token keyword">del</span> furniture<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> furniture
<span class="token comment"># [&#39;table&#39;, &#39;chair&#39;]</span>
</code></pre><h3 id="remove" tabindex="-1">remove()</h3><p><code>remove</code> removes an item with using actual value of it:</p><pre class="language-python"><code class="language-python"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> furniture <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;table&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;chair&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;rack&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;shelf&#39;</span><span class="token punctuation">]</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> furniture<span class="token punctuation">.</span>remove<span class="token punctuation">(</span><span class="token string">&#39;chair&#39;</span><span class="token punctuation">)</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> furniture
<span class="token comment"># [&#39;table&#39;, &#39;rack&#39;, &#39;shelf&#39;]</span>
</code></pre>`,48),L=o(`<h3 id="pop" tabindex="-1">pop()</h3><p>By default, <code>pop</code> will remove and return the last item of the list. You can also pass the index of the element as an optional parameter:</p><pre class="language-python"><code class="language-python"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> animals <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;cat&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;bat&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;rat&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;elephant&#39;</span><span class="token punctuation">]</span>

<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> animals<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token string">&#39;elephant&#39;</span>

<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> animals
<span class="token punctuation">[</span><span class="token string">&#39;cat&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;bat&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;rat&#39;</span><span class="token punctuation">]</span>

<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> animals<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
<span class="token string">&#39;cat&#39;</span>

<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> animals
<span class="token punctuation">[</span><span class="token string">&#39;bat&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;rat&#39;</span><span class="token punctuation">]</span>
</code></pre><h2 id="sorting-values-with-sort" tabindex="-1">Sorting values with sort()</h2><pre class="language-python"><code class="language-python"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> numbers <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">3.14</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">7</span><span class="token punctuation">]</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> numbers<span class="token punctuation">.</span>sort<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> numbers
<span class="token comment"># [-7, 1, 2, 3.14, 5]</span>

furniture <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;table&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;chair&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;rack&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;shelf&#39;</span><span class="token punctuation">]</span>
furniture<span class="token punctuation">.</span>sort<span class="token punctuation">(</span><span class="token punctuation">)</span>
furniture
<span class="token comment"># [&#39;chair&#39;, &#39;rack&#39;, &#39;shelf&#39;, &#39;table&#39;]</span>
</code></pre><p>You can also pass <code>True</code> for the <code>reverse</code> keyword argument to have <code>sort()</code> sort the values in reverse order:</p><pre class="language-python"><code class="language-python"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> furniture<span class="token punctuation">.</span>sort<span class="token punctuation">(</span>reverse<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> furniture
<span class="token comment"># [&#39;table&#39;, &#39;shelf&#39;, &#39;rack&#39;, &#39;chair&#39;]</span>
</code></pre><p>If you need to sort the values in regular alphabetical order, pass <code>str.lower</code> for the key keyword argument in the sort() method call:</p><pre class="language-python"><code class="language-python"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> letters <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;z&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;A&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Z&#39;</span><span class="token punctuation">]</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> letters<span class="token punctuation">.</span>sort<span class="token punctuation">(</span>key<span class="token operator">=</span><span class="token builtin">str</span><span class="token punctuation">.</span>lower<span class="token punctuation">)</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> letters
<span class="token comment"># [&#39;a&#39;, &#39;A&#39;, &#39;z&#39;, &#39;Z&#39;]</span>
</code></pre><p>You can use the built-in function <code>sorted</code> to return a new list:</p><pre class="language-python"><code class="language-python"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> furniture <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;table&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;chair&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;rack&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;shelf&#39;</span><span class="token punctuation">]</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token builtin">sorted</span><span class="token punctuation">(</span>furniture<span class="token punctuation">)</span>
<span class="token comment"># [&#39;chair&#39;, &#39;rack&#39;, &#39;shelf&#39;, &#39;table&#39;]</span>
</code></pre><h2 id="the-tuple-data-type" tabindex="-1">The Tuple data type</h2>`,12),C=t("a",{target:"_blank",href:"https://stackoverflow.com/questions/1708510/list-vs-tuple-when-to-use-each"},"Tuples vs Lists",-1),I=t("code",null,"tuples",-1),B=t("i",null,"immutable",-1),A=t("code",null,"lists",-1),Y=t("i",null,"mutable",-1),V=o(`<pre class="language-python"><code class="language-python"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> furniture <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">&#39;table&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;chair&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;rack&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;shelf&#39;</span><span class="token punctuation">)</span>

<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> furniture<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
<span class="token comment"># &#39;table&#39;</span>

<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> furniture<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">]</span>
<span class="token comment"># (&#39;chair&#39;, &#39;rack&#39;)</span>

<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token builtin">len</span><span class="token punctuation">(</span>furniture<span class="token punctuation">)</span>
<span class="token comment"># 4</span>
</code></pre><p>The main way that tuples are different from lists is that tuples, like strings, are immutable.</p><h2 id="converting-between-list-and-tuple" tabindex="-1">Converting between list() and tuple()</h2><pre class="language-python"><code class="language-python"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token builtin">tuple</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;cat&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;dog&#39;</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token comment"># (&#39;cat&#39;, &#39;dog&#39;, 5)</span>

<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">&#39;cat&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;dog&#39;</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment"># [&#39;cat&#39;, &#39;dog&#39;, 5]</span>

<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token string">&#39;hello&#39;</span><span class="token punctuation">)</span>
<span class="token comment"># [&#39;h&#39;, &#39;e&#39;, &#39;l&#39;, &#39;l&#39;, &#39;o&#39;]</span>
</code></pre>`,4),M="Python Lists and Tuples - Python Cheatsheet",R="In python, Lists are are one of the 4 data types in Python used to store collections of data.",q=[{property:"og:title",content:"Python Lists and Tuples - Python Cheatsheet"},{property:"og:description",content:"In python, Lists are are one of the 4 data types in Python used to store collections of data."},{name:"description",content:"In python, Lists are are one of the 4 data types in Python used to store collections of data."}],F={__name:"22-lists-and-tuples",setup(Z,{expose:e}){const p={title:"Python Lists and Tuples - Python Cheatsheet",description:"In python, Lists are are one of the 4 data types in Python used to store collections of data.",meta:[{property:"og:title",content:"Python Lists and Tuples - Python Cheatsheet"},{property:"og:description",content:"In python, Lists are are one of the 4 data types in Python used to store collections of data."},{name:"description",content:"In python, Lists are are one of the 4 data types in Python used to store collections of data."}]};return e({frontmatter:p}),_({title:"Python Lists and Tuples - Python Cheatsheet",meta:[{property:"og:title",content:"Python Lists and Tuples - Python Cheatsheet"},{property:"og:description",content:"In python, Lists are are one of the 4 data types in Python used to store collections of data."},{name:"description",content:"In python, Lists are are one of the 4 data types in Python used to store collections of data."}]}),(N,S)=>{const c=v,l=b,r=y,u=f,i=d,k=m,g=h;return w(),x("div",T,[s(c,{title:p.title,description:p.description},{default:a(()=>[n(" Python Lists ")]),_:1},8,["title","description"]),P,s(u,null,{default:a(()=>[s(l,null,{default:a(()=>[n(" Removing repeated items ")]),_:1}),s(r,null,{default:a(()=>[n(" If the value appears multiple times in the list, only the first instance of the value will be removed. ")]),_:1})]),_:1}),L,s(g,null,{default:a(()=>[s(i,null,{default:a(()=>[C]),_:1}),s(k,null,{default:a(()=>[n(" The key difference between tuples and lists is that, while "),I,n(" are "),B,n(" objects, "),A,n(" are "),Y,n(". This means that tuples cannot be changed while the lists can be modified. Tuples are more memory efficient than the lists. ")]),_:1})]),_:1}),V])}}};export{F as default,R as description,q as meta,M as title};
