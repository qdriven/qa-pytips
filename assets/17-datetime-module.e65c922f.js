import{q as s,o as e,c as o,b as p,f as c,t as d,B as r,s as l}from"./app.e6b4b7b5.js";const i={class:"markdown-body"},u=d(`<p>Datetime\u6A21\u5757\u5141\u8BB8\u6211\u4EEC\u5904\u7406\u65E5\u671F\u548C\u65F6\u95F4\u5BF9\u8C61\u3002\u5B83\u63D0\u4F9B\u4E86\u4E09\u79CD\u989D\u5916\u7684\u6570\u636E\u7C7B\u578B:<code>date</code>, <code>time</code> and <code>datetime</code>\u3002</p><pre class="language-python"><code class="language-python"><span class="token keyword">import</span> datetime
</code></pre><h2 id="date" tabindex="-1">date()</h2><pre class="language-python"><code class="language-python">datetime<span class="token punctuation">.</span>date<span class="token punctuation">(</span>year<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">,</span> month<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">,</span> day<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">)</span>
</code></pre><p>The date method \u8FD4\u56DE a date \u5BF9\u8C61 with the <code>year</code>, <code>month</code> and <code>day</code> attributes:</p><pre class="language-python"><code class="language-python"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token keyword">from</span> datetime <span class="token keyword">import</span> date
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> obj <span class="token operator">=</span> date<span class="token punctuation">(</span><span class="token number">2022</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> obj<span class="token punctuation">.</span>year
<span class="token comment"># 2022</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> obj<span class="token punctuation">.</span>month
<span class="token comment"># 12</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> obj<span class="token punctuation">.</span>day
<span class="token comment"># 1</span>
</code></pre><h2 id="time" tabindex="-1">time()</h2><pre class="language-python"><code class="language-python">datetime<span class="token punctuation">.</span>time<span class="token punctuation">(</span>hour<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">,</span> minute<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">,</span> second<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">)</span>
</code></pre><p>The <code>time</code> method return a time object with the <code>hour</code>, <code>minute</code>, <code>second</code>, <code>microsecond</code> and <code>tzinfo</code> attributes:</p><pre class="language-python"><code class="language-python"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token keyword">from</span> datetime <span class="token keyword">import</span> time
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> obj <span class="token operator">=</span> time<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">33</span><span class="token punctuation">)</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> obj<span class="token punctuation">.</span>hour
<span class="token comment"># 10</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> obj<span class="token punctuation">.</span>second
<span class="token comment"># 33</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> obj<span class="token punctuation">.</span>microsecond
<span class="token comment"># 0</span>
</code></pre><h2 id="datetime" tabindex="-1">datetime()</h2><pre class="language-python"><code class="language-python">datetime<span class="token punctuation">.</span>datetime<span class="token punctuation">(</span>year<span class="token punctuation">,</span> month<span class="token punctuation">,</span> day<span class="token punctuation">,</span> hour<span class="token punctuation">,</span> minute<span class="token punctuation">,</span> second<span class="token punctuation">)</span>
</code></pre><p>The <code>datetime</code> returns an object with both, the <code>date</code> and <code>time</code> objects attributes:</p><pre class="language-python"><code class="language-python"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token keyword">from</span> datetime <span class="token keyword">import</span> datetime
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> obj <span class="token operator">=</span> datetime<span class="token punctuation">(</span><span class="token number">2024</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">35</span><span class="token punctuation">,</span> <span class="token number">59</span><span class="token punctuation">)</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> obj<span class="token punctuation">.</span>year
<span class="token comment"># 2024</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> obj<span class="token punctuation">.</span>month
<span class="token comment"># 12</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> obj<span class="token punctuation">.</span>day
<span class="token comment"># 1</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> obj<span class="token punctuation">.</span>hour
<span class="token comment"># 15</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> obj<span class="token punctuation">.</span>second
<span class="token comment"># 59</span>
</code></pre><h2 id="now-and-today" tabindex="-1">now() and today()</h2><p><code>now</code> and <code>today</code> methods return a <code>datetime</code> object with system\u2019s exact day and time:</p><pre class="language-python"><code class="language-python"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token keyword">from</span> datetime <span class="token keyword">import</span> datetime
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> now <span class="token operator">=</span> datetime<span class="token punctuation">.</span>now<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> now
<span class="token comment"># datetime.datetime(2022, 7, 23, 19, 56, 49, 589806)</span>
</code></pre><p>Because the object returned is a <code>datetime</code>, we can access both, <code>date</code> and <code>time</code> attributes:</p><pre class="language-python"><code class="language-python"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> now<span class="token punctuation">.</span>date<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment"># datetime.date(2022, 7, 23)</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> now<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment"># datetime.time(19, 56, 49, 589806)</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> now<span class="token punctuation">.</span>year
<span class="token comment"># 2022</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> now<span class="token punctuation">.</span>month
<span class="token comment"># 7</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> now<span class="token punctuation">.</span>day
<span class="token comment"># 23</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> now<span class="token punctuation">.</span>hour
<span class="token comment"># 19</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> now<span class="token punctuation">.</span>minute
<span class="token comment"># 56</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> now<span class="token punctuation">.</span>second
<span class="token comment"># 49</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> now<span class="token punctuation">.</span>microsecond
<span class="token comment"># 589806</span>
</code></pre><p>Additionally, <code>now</code> can take a <a href="https://en.wikipedia.org/wiki/List_of_tz_database_time_zones" target="_blank" rel="noopener">timezone</a> object as an optional parameter:</p><pre class="language-python"><code class="language-python"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token keyword">from</span> datetime <span class="token keyword">import</span> datetime<span class="token punctuation">,</span> timezone
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> datetime<span class="token punctuation">.</span>now<span class="token punctuation">(</span>timezone<span class="token punctuation">.</span>utc<span class="token punctuation">)</span>
<span class="token comment"># datetime.datetime(2022, 7, 24, 0, 20, 8, 265634, tzinfo=datetime.timezone.utc)</span>
</code></pre><p>If a <em>timezone</em> parameter is not specified, <code>now</code> will default to the system timezone.</p><h2 id="strftime-and-strptime" tabindex="-1">strftime()\xA0and strptime()</h2><p>You can easily transform between strings and datetime objects with the <code>strftime</code> and <code>strptime</code> methods.</p><h3 id="strftime" tabindex="-1">strftime()</h3><p><code>strftime</code> allow us to create human formatted strings out of a Python datetime object:</p><pre class="language-python"><code class="language-python"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token keyword">from</span> datetime <span class="token keyword">import</span> datetime
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> now <span class="token operator">=</span> datetime<span class="token punctuation">.</span>now<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> now
<span class="token comment"># datetime.datetime(2022, 7, 23, 20, 31, 19, 751479)</span>

<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> now<span class="token punctuation">.</span>strftime<span class="token punctuation">(</span><span class="token string">&quot;%d-%b-%Y&quot;</span><span class="token punctuation">)</span>
<span class="token comment"># &#39;23-Jul-2022&#39;</span>

<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> now<span class="token punctuation">.</span>strftime<span class="token punctuation">(</span><span class="token string">&quot;%d-%m-%Y&quot;</span><span class="token punctuation">)</span>
<span class="token comment"># &#39;23-07-2022&#39;</span>

<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> now<span class="token punctuation">.</span>strftime<span class="token punctuation">(</span><span class="token string">&quot;%d-%b-%Y&quot;</span><span class="token punctuation">)</span>
<span class="token comment"># &#39;23-Jul-2022&#39;</span>

<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> now<span class="token punctuation">.</span>strftime<span class="token punctuation">(</span><span class="token string">&quot;%d-%m-%Y&quot;</span><span class="token punctuation">)</span>
<span class="token comment"># &#39;23-07-2022&#39;</span>

<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> now<span class="token punctuation">.</span>strftime<span class="token punctuation">(</span><span class="token string">&quot;%m/%d/%Y&quot;</span><span class="token punctuation">)</span>
<span class="token comment"># &#39;07/23/2022&#39;</span>

<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> now<span class="token punctuation">.</span>strftime<span class="token punctuation">(</span><span class="token string">&quot;%b/%d/%Y - %H:%M:%S&quot;</span><span class="token punctuation">)</span>
<span class="token comment"># &#39;Jul/23/2022 - 20:31:19&#39;</span>
</code></pre><p>You may find the strings passed to <code>strftime</code> to be a little strange, but it is pretty easy to understand its meaning. For example, <code>%m/%d/%Y</code> will return the month, day, and year separated by <code>/</code> (07/23/2022).</p><h3 id="strptime" tabindex="-1">strptime()</h3><p>The <code>strptime</code> method creates a <code>datetime</code> object from a string.</p><p>This method accepts two parameters:</p><pre class="language-python"><code class="language-python">obj<span class="token punctuation">.</span>strptime<span class="token punctuation">(</span>datetime_string<span class="token punctuation">,</span> <span class="token builtin">format</span><span class="token punctuation">)</span>
</code></pre><ul><li>A string representing a datetime object.</li><li>The python format code equivalent to that string.</li></ul><pre class="language-python"><code class="language-python"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token keyword">from</span> datetime <span class="token keyword">import</span> datetime

<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> datetime_str <span class="token operator">=</span> <span class="token string">&#39;12-Jul-2023&#39;</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> datetime<span class="token punctuation">.</span>strptime<span class="token punctuation">(</span>datetime_str<span class="token punctuation">,</span> <span class="token string">&#39;%d-%b-%Y&#39;</span><span class="token punctuation">)</span>
<span class="token comment"># datetime.datetime(2023, 7, 12, 0, 0)</span>

<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> datetime_str <span class="token operator">=</span> <span class="token string">&#39;Jul/12/2023 - 14:38:37&#39;</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> datetime<span class="token punctuation">.</span>strptime<span class="token punctuation">(</span>datetime_str<span class="token punctuation">,</span> <span class="token string">&quot;%b/%d/%Y - %H:%M:%S&quot;</span><span class="token punctuation">)</span>
<span class="token comment"># datetime.datetime(2023, 7, 12, 14, 38, 37)</span>
</code></pre><h3 id="format-codes" tabindex="-1">Format Codes</h3><table><thead><tr><th>Directive</th><th>Meaning</th><th>Example</th></tr></thead><tbody><tr><td><code>%a</code></td><td>Weekday as locale\u2019s abbreviated name.</td><td>Sun, Mon, \u2026, Sat (en_US)</td></tr><tr><td><code>%A</code></td><td>Weekday as locale\u2019s full name.</td><td>Sunday, Monday, \u2026, Saturday (en_US)</td></tr><tr><td><code>%w</code></td><td>Weekday as a decimal number, where 0 is Sunday and 6 is Saturday.</td><td>0, 1, \u2026, 6</td></tr><tr><td><code>%d</code></td><td>Day of the month as a zero-padded decimal number.</td><td>01, 02, \u2026, 31</td></tr><tr><td><code>%b</code></td><td>Month as locale\u2019s abbreviated name.</td><td>Jan, Feb, \u2026, Dec (en_US)</td></tr><tr><td><code>%B</code></td><td>Month as locale\u2019s full name.</td><td>January, February, \u2026, December (en_US)</td></tr><tr><td><code>%m</code></td><td>Month as a zero-padded decimal number.</td><td>01, 02, \u2026, 12</td></tr><tr><td><code>%y</code></td><td>Year without century as a zero-padded decimal number.</td><td>00, 01, \u2026, 99</td></tr><tr><td><code>%Y</code></td><td>Year with century as a decimal number.</td><td>0001, 0002, \u2026, 2013, 2014, \u2026, 9998, 9999</td></tr><tr><td><code>%H</code></td><td>Hour (24-hour clock) as a zero-padded decimal number.</td><td>00, 01, \u2026, 23</td></tr><tr><td><code>%I</code></td><td>Hour (12-hour clock) as a zero-padded decimal number.</td><td>01, 02, \u2026, 12</td></tr><tr><td><code>%p</code></td><td>Locale\u2019s equivalent of either AM or PM.</td><td>AM, PM (en_US)</td></tr><tr><td><code>%M</code></td><td>Minute as a zero-padded decimal number.</td><td>00, 01, \u2026, 59</td></tr><tr><td><code>%S</code></td><td>Second as a zero-padded decimal number.</td><td>00, 01, \u2026, 59</td></tr><tr><td><code>%f</code></td><td>Microsecond as a decimal number, zero-padded on the left.</td><td>000000, 000001, \u2026, 999999</td></tr><tr><td><code>%z</code></td><td>UTC offset in the form <code>\xB1HHMM[SS[.ffffff]]</code> (empty string if the object is naive).</td><td>(empty), +0000, -0400, +1030, +063415, -030712.345216</td></tr><tr><td><code>%Z</code></td><td>Time zone name (empty string if the object is naive).</td><td>(empty), UTC, GMT</td></tr><tr><td><code>%j</code></td><td>Day of the year as a zero-padded decimal number.</td><td>001, 002, \u2026, 366</td></tr><tr><td><code>%U</code></td><td>Week number of the year (Sunday as the first day of the week) as a zero padded decimal number. All days in a new year preceding the first Sunday are considered to be in week 0.</td><td>00, 01, \u2026, 53</td></tr><tr><td><code>%W</code></td><td>Week number of the year (Monday as the first day of the week) as a decimal number. All days in a new year preceding the first Monday are considered to be in week 0.</td><td>00, 01, \u2026, 53</td></tr><tr><td><code>%c</code></td><td>Locale\u2019s appropriate date and time representation.</td><td>Tue Aug 16 21:30:00 1988 (en_US)</td></tr><tr><td><code>%x</code></td><td>Locale\u2019s appropriate date representation.</td><td>08/16/88 (None)</td></tr><tr><td><code>%X</code></td><td>Locale\u2019s appropriate time representation.</td><td>21:30:00 (en_US)</td></tr><tr><td><code>%%</code></td><td>A literal <code>&#39;%&#39;</code> character.</td><td>%</td></tr></tbody></table><h2 id="timedelta" tabindex="-1">timedelta()</h2><p>The <code>timedelta</code> object represents the difference between two dates or times.</p><pre class="language-python"><code class="language-python"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token keyword">from</span> datetime <span class="token keyword">import</span> datetime

<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> date_1 <span class="token operator">=</span> datetime<span class="token punctuation">.</span>strptime<span class="token punctuation">(</span><span class="token string">&#39;12-Jul-2023&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;%d-%b-%Y&#39;</span><span class="token punctuation">)</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> date_2 <span class="token operator">=</span> datetime<span class="token punctuation">.</span>strptime<span class="token punctuation">(</span><span class="token string">&#39;01-Jan-2024&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;%d-%b-%Y&#39;</span><span class="token punctuation">)</span>

<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> difference <span class="token operator">=</span> date_2 <span class="token operator">-</span> date_1
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> difference
<span class="token comment"># datetime.timedelta(days=173)</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> difference<span class="token punctuation">.</span>days
<span class="token comment"># 173</span>
</code></pre><p><code>timedelta</code> can add <code>days</code>, <code>seconds</code> and <code>microseconds</code> to a datetime object:</p><pre class="language-python"><code class="language-python"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token keyword">from</span> datetime <span class="token keyword">import</span> datetime<span class="token punctuation">,</span> timedelta

<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> now <span class="token operator">=</span> datetime<span class="token punctuation">.</span>now<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> now
<span class="token comment"># datetime.datetime(2022, 7, 23, 21, 25, 2, 341081)</span>

<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> now <span class="token operator">+</span> timedelta<span class="token punctuation">(</span>days<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">,</span> seconds<span class="token operator">=</span><span class="token number">15</span><span class="token punctuation">)</span>
<span class="token comment"># datetime.datetime(2022, 8, 2, 21, 25, 17, 341081)</span>
</code></pre><p>And can subtract <code>days</code>, <code>seconds</code> and <code>microseconds</code> to a datetime object:</p><pre class="language-python"><code class="language-python"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token keyword">from</span> datetime <span class="token keyword">import</span> datetime<span class="token punctuation">,</span> timedelta

<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> now <span class="token operator">=</span> datetime<span class="token punctuation">.</span>now<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> now
<span class="token comment"># datetime.datetime(2022, 7, 23, 21, 25, 2, 341081)</span>

<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> now <span class="token operator">-</span> timedelta<span class="token punctuation">(</span>days<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">,</span> seconds<span class="token operator">=</span><span class="token number">15</span><span class="token punctuation">)</span>
<span class="token comment"># datetime.datetime(2022, 7, 13, 21, 59, 41, 100883)</span>
</code></pre>`,43),b="Python Datetime Module - Python Cheatsheet",w="The Datetime module allows us to work with date and time by providing 3 additional data types: date, time and datetime.",f=[{property:"og:title",content:"Python Datetime Module - Python Cheatsheet"},{property:"og:description",content:"The Datetime module allows us to work with date and time by providing 3 additional data types: date, time and datetime."},{name:"description",content:"The Datetime module allows us to work with date and time by providing 3 additional data types: date, time and datetime."}],_={__name:"17-datetime-module",setup(k,{expose:a}){const t={title:"Python Datetime Module - Python Cheatsheet",description:"The Datetime module allows us to work with date and time by providing 3 additional data types: date, time and datetime.",meta:[{property:"og:title",content:"Python Datetime Module - Python Cheatsheet"},{property:"og:description",content:"The Datetime module allows us to work with date and time by providing 3 additional data types: date, time and datetime."},{name:"description",content:"The Datetime module allows us to work with date and time by providing 3 additional data types: date, time and datetime."}]};return a({frontmatter:t}),s({title:"Python Datetime Module - Python Cheatsheet",meta:[{property:"og:title",content:"Python Datetime Module - Python Cheatsheet"},{property:"og:description",content:"The Datetime module allows us to work with date and time by providing 3 additional data types: date, time and datetime."},{name:"description",content:"The Datetime module allows us to work with date and time by providing 3 additional data types: date, time and datetime."}]}),(g,h)=>{const n=r;return e(),o("div",i,[p(n,{title:t.title,description:t.description},{default:c(()=>[l(" Python Datetime Module ")]),_:1},8,["title","description"]),u])}}};export{_ as default,w as description,f as meta,b as title};
