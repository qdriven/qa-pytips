import{_ as c,a as l,b as d}from"./BaseDisclaimerTitle.631caf82.js";import{q as u,o as h,c as k,b as n,f as t,t as g,B as f,s,e as m}from"./app.e6b4b7b5.js";const y={class:"markdown-body"},b=m("a",{target:"_blank",href:"https://docs.python.org/3/library/functions.html#print"},"Python 3 documentation",-1),_=g(`<p>The <code>print()</code> function writes the value of the argument(s) it is given. [\u2026] it handles multiple arguments, floating point-quantities, and strings. Strings are printed without quotes, and a space is inserted between items, so you can format things nicely:</p><pre class="language-python"><code class="language-python"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;Hello world!&#39;</span><span class="token punctuation">)</span>
<span class="token comment"># Hello world!</span>

<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> a <span class="token operator">=</span> <span class="token number">1</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;Hello world!&#39;</span><span class="token punctuation">,</span> a<span class="token punctuation">)</span>
<span class="token comment"># Hello world! 1</span>
</code></pre><h2 id="the-end-keyword" tabindex="-1">The end keyword</h2><p>The keyword argument <code>end</code> can be used to avoid the newline after the output, or end the output with a different string:</p><pre class="language-python"><code class="language-python">phrase <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;printed&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;with&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;dash&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;in&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;between&#39;</span><span class="token punctuation">]</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token keyword">for</span> word <span class="token keyword">in</span> phrase<span class="token punctuation">:</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>     <span class="token keyword">print</span><span class="token punctuation">(</span>word<span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">&#39;-&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token comment"># printed-with-a-dash-in-between-</span>
</code></pre><h2 id="the-sep-keyword" tabindex="-1">The sep keyword</h2><p>The keyword <code>sep</code> specify how to separate the objects, if there is more than one:</p><pre class="language-python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;cats&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;dogs&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;mice&#39;</span><span class="token punctuation">,</span> sep<span class="token operator">=</span><span class="token string">&#39;,&#39;</span><span class="token punctuation">)</span>
<span class="token comment"># cats,dogs,mice</span>
</code></pre>`,8),T="Python print() built-in function - Python Cheatsheet",H="Print objects to the text stream file, separated by sep and followed by end. sep, end, file, and flush, if present, must be given as keyword arguments.",B=[{property:"og:title",content:"Python print() built-in function - Python Cheatsheet"},{property:"og:description",content:"Print objects to the text stream file, separated by sep and followed by end. sep, end, file, and flush, if present, must be given as keyword arguments."},{name:"description",content:"Print objects to the text stream file, separated by sep and followed by end. sep, end, file, and flush, if present, must be given as keyword arguments."}],N={__name:"54-print",setup(w,{expose:a}){const e={title:"Python print() built-in function - Python Cheatsheet",description:"Print objects to the text stream file, separated by sep and followed by end. sep, end, file, and flush, if present, must be given as keyword arguments.",meta:[{property:"og:title",content:"Python print() built-in function - Python Cheatsheet"},{property:"og:description",content:"Print objects to the text stream file, separated by sep and followed by end. sep, end, file, and flush, if present, must be given as keyword arguments."},{name:"description",content:"Print objects to the text stream file, separated by sep and followed by end. sep, end, file, and flush, if present, must be given as keyword arguments."}]};return a({frontmatter:e}),u({title:"Python print() built-in function - Python Cheatsheet",meta:[{property:"og:title",content:"Python print() built-in function - Python Cheatsheet"},{property:"og:description",content:"Print objects to the text stream file, separated by sep and followed by end. sep, end, file, and flush, if present, must be given as keyword arguments."},{name:"description",content:"Print objects to the text stream file, separated by sep and followed by end. sep, end, file, and flush, if present, must be given as keyword arguments."}]}),(x,v)=>{const o=f,p=l,i=d,r=c;return h(),k("div",y,[n(o,{title:e.title,description:e.description},{default:t(()=>[s(" Python print() built-in function ")]),_:1},8,["title","description"]),n(r,null,{default:t(()=>[n(p,null,{default:t(()=>[s(" From the "),b]),_:1}),n(i,null,{default:t(()=>[s(" Print objects to the text stream file, separated by sep and followed by end. sep, end, file, and flush, if present, must be given as keyword arguments. ")]),_:1})]),_:1}),_])}}};export{N as default,H as description,B as meta,T as title};
