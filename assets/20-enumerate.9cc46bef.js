import{_ as u,a as i,b as l}from"./BaseDisclaimerTitle.631caf82.js";import{q as m,o as h,c as k,b as n,f as t,t as _,B as d,s as a,e as b}from"./app.e6b4b7b5.js";const g={class:"markdown-body"},f=b("a",{target:"_blank",href:"https://docs.python.org/3/library/functions.html#enumerate"},"Python 3 documentation",-1),y=_(`<h2 id="examples" tabindex="-1">Examples</h2><pre class="language-python"><code class="language-python"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> l <span class="token operator">=</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> l
<span class="token comment"># &lt;enumerate object at 0x7fcac409cc40&gt;</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> l<span class="token punctuation">.</span>__next__<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment"># (0, 1)</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> l<span class="token punctuation">.</span>__next__<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment"># (1, 2)</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> l<span class="token punctuation">.</span>__next__<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment"># (2, 3)</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> l<span class="token punctuation">.</span>__next__<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment"># (3, 4)</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> l<span class="token punctuation">.</span>__next__<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment"># (4, 5)</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> l<span class="token punctuation">.</span>__next__<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment"># Traceback (most recent call last):</span>
<span class="token comment">#   File &quot;&lt;stdin&gt;&quot;, line 1, in &lt;module&gt;</span>
<span class="token comment"># StopIteration</span>
</code></pre><p><code>enumerate</code> is usually used in a <code>for</code> loop to get the index of an item:</p><pre class="language-python"><code class="language-python"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token keyword">for</span> i<span class="token punctuation">,</span> item <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>     <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;Index: </span><span class="token interpolation"><span class="token punctuation">{</span>i<span class="token punctuation">}</span></span><span class="token string">, Item: </span><span class="token interpolation"><span class="token punctuation">{</span>item<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token comment"># Index: 0, Item: 1</span>
<span class="token comment"># Index: 1, Item: 2</span>
<span class="token comment"># Index: 2, Item: 3</span>
<span class="token comment"># Index: 3, Item: 4</span>
<span class="token comment"># Index: 4, Item: 5</span>
</code></pre>`,4),I="Python enumerate() built-in function - Python Cheatsheet",T="Return an enumerate object. iterable must be a sequence, an iterator, or some other object which supports iteration. The __next__() method of the iterator returned by enumerate() returns a tuple containing a count (from start which defaults to 0) and the values obtained from iterating over iterable.",R=[{property:"og:title",content:"Python enumerate() built-in function - Python Cheatsheet"},{property:"og:description",content:"Return an enumerate object. iterable must be a sequence, an iterator, or some other object which supports iteration. The __next__() method of the iterator returned by enumerate() returns a tuple containing a count (from start which defaults to 0) and the values obtained from iterating over iterable."},{name:"description",content:"Return an enumerate object. iterable must be a sequence, an iterator, or some other object which supports iteration. The __next__() method of the iterator returned by enumerate() returns a tuple containing a count (from start which defaults to 0) and the values obtained from iterating over iterable."}],C={__name:"20-enumerate",setup(x,{expose:s}){const e={title:"Python enumerate() built-in function - Python Cheatsheet",description:"Return an enumerate object. iterable must be a sequence, an iterator, or some other object which supports iteration. The __next__() method of the iterator returned by enumerate() returns a tuple containing a count (from start which defaults to 0) and the values obtained from iterating over iterable.",meta:[{property:"og:title",content:"Python enumerate() built-in function - Python Cheatsheet"},{property:"og:description",content:"Return an enumerate object. iterable must be a sequence, an iterator, or some other object which supports iteration. The __next__() method of the iterator returned by enumerate() returns a tuple containing a count (from start which defaults to 0) and the values obtained from iterating over iterable."},{name:"description",content:"Return an enumerate object. iterable must be a sequence, an iterator, or some other object which supports iteration. The __next__() method of the iterator returned by enumerate() returns a tuple containing a count (from start which defaults to 0) and the values obtained from iterating over iterable."}]};return s({frontmatter:e}),m({title:"Python enumerate() built-in function - Python Cheatsheet",meta:[{property:"og:title",content:"Python enumerate() built-in function - Python Cheatsheet"},{property:"og:description",content:"Return an enumerate object. iterable must be a sequence, an iterator, or some other object which supports iteration. The __next__() method of the iterator returned by enumerate() returns a tuple containing a count (from start which defaults to 0) and the values obtained from iterating over iterable."},{name:"description",content:"Return an enumerate object. iterable must be a sequence, an iterator, or some other object which supports iteration. The __next__() method of the iterator returned by enumerate() returns a tuple containing a count (from start which defaults to 0) and the values obtained from iterating over iterable."}]}),(j,v)=>{const o=d,p=i,r=l,c=u;return h(),k("div",g,[n(o,{title:e.title,description:e.description},{default:t(()=>[a(" Python enumerate() built-in function ")]),_:1},8,["title","description"]),n(c,null,{default:t(()=>[n(p,null,{default:t(()=>[a(" From the "),f]),_:1}),n(r,null,{default:t(()=>[a(" Return an enumerate object. iterable must be a sequence, an iterator, or some other object which supports iteration. The __next__() method of the iterator returned by enumerate() returns a tuple containing a count (from start which defaults to 0) and the values obtained from iterating over iterable. ")]),_:1})]),_:1}),y])}}};export{C as default,T as description,R as meta,I as title};
