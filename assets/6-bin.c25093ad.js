import{_ as l}from"./EmptySection.79a00cae.js";import{_,a as u,b as d}from"./BaseDisclaimerTitle.631caf82.js";import{q as b,o as m,c as g,b as n,f as t,t as y,B as f,s as e,e as o}from"./app.e6b4b7b5.js";import"./BaseWarningTitle.f5a386c9.js";const x={class:"markdown-body"},k=o("a",{target:"_blank",href:"https://docs.python.org/3/library/functions.html#bin"},"Python 3 documentation",-1),P=o("code",null,"__index__()",-1),v=y(`<h2 id="examples" tabindex="-1">Examples</h2><pre class="language-python"><code class="language-python"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token builtin">bin</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
<span class="token comment"># &#39;0b1&#39;</span>

<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token builtin">bin</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>
<span class="token comment"># &#39;0b1010&#39;</span>

<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token builtin">bin</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span>
<span class="token comment"># &#39;0b1100100&#39;</span>

<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token builtin">bin</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span>
<span class="token comment"># &#39;0b1111101000&#39;</span>
</code></pre>`,2),E="Python bin() built-in function - Python Cheatsheet",q="Convert an integer number to a binary string prefixed with \u201C0b\u201D. The result is a valid Python expression. If x is not a Python int object, it has to define an __index__() method that returns an integer.",F=[{property:"og:title",content:"Python bin() built-in function - Python Cheatsheet"},{property:"og:description",content:"Convert an integer number to a binary string prefixed with \u201C0b\u201D. The result is a valid Python expression. If x is not a Python int object, it has to define an __index__() method that returns an integer."},{name:"description",content:"Convert an integer number to a binary string prefixed with \u201C0b\u201D. The result is a valid Python expression. If x is not a Python int object, it has to define an __index__() method that returns an integer."}],H={__name:"6-bin",setup(C,{expose:a}){const s={title:"Python bin() built-in function - Python Cheatsheet",description:"Convert an integer number to a binary string prefixed with \u201C0b\u201D. The result is a valid Python expression. If x is not a Python int object, it has to define an __index__() method that returns an integer.",meta:[{property:"og:title",content:"Python bin() built-in function - Python Cheatsheet"},{property:"og:description",content:"Convert an integer number to a binary string prefixed with \u201C0b\u201D. The result is a valid Python expression. If x is not a Python int object, it has to define an __index__() method that returns an integer."},{name:"description",content:"Convert an integer number to a binary string prefixed with \u201C0b\u201D. The result is a valid Python expression. If x is not a Python int object, it has to define an __index__() method that returns an integer."}]};return a({frontmatter:s}),b({title:"Python bin() built-in function - Python Cheatsheet",meta:[{property:"og:title",content:"Python bin() built-in function - Python Cheatsheet"},{property:"og:description",content:"Convert an integer number to a binary string prefixed with \u201C0b\u201D. The result is a valid Python expression. If x is not a Python int object, it has to define an __index__() method that returns an integer."},{name:"description",content:"Convert an integer number to a binary string prefixed with \u201C0b\u201D. The result is a valid Python expression. If x is not a Python int object, it has to define an __index__() method that returns an integer."}]}),(T,j)=>{const i=f,r=u,p=d,c=_,h=l;return m(),g("div",x,[n(i,{title:s.title,description:s.description},{default:t(()=>[e(" Python bin() built-in function ")]),_:1},8,["title","description"]),n(c,null,{default:t(()=>[n(r,null,{default:t(()=>[e(" From the "),k]),_:1}),n(p,null,{default:t(()=>[e(" Convert an integer number to a binary string prefixed with \u201C0b\u201D. The result is a valid Python expression. If x is not a Python int object, it has to define an "),P,e(" method that returns an integer. ")]),_:1})]),_:1}),v,n(h)])}}};export{H as default,q as description,F as meta,E as title};
