import{_ as g,a as _,b as k}from"./BaseWarningTitle.f5a386c9.js";import{_ as b,a as d,b as y}from"./BaseDisclaimerTitle.631caf82.js";import{q as f,o as T,c as q,b as n,f as t,t as a,B as P,s,e as o}from"./app.e6b4b7b5.js";const j={class:"markdown-body"},R=o("a",{target:"_blank",href:"https://docs.python.org/3/library/functions.html#len"},"Python 3 documentation",-1),w=a(`<h2 id="example" tabindex="-1">Example</h2><p>Return the the number of items of an object:</p><pre class="language-python"><code class="language-python"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token builtin">len</span><span class="token punctuation">(</span><span class="token string">&#39;hello&#39;</span><span class="token punctuation">)</span>
<span class="token comment"># 5</span>

<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token builtin">len</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;cat&#39;</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">&#39;dog&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token comment"># 3</span>
</code></pre><h2 id="test-of-emptiness" tabindex="-1">Test of emptiness</h2>`,4),z=o("code",null,"len",-1),x=a(`<pre class="language-python"><code class="language-python"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span>

<span class="token comment"># bad</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">:</span>  <span class="token comment"># evaluates to True</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>     <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;the list is not empty!&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token comment"># the list is not empty!</span>

<span class="token comment"># good</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token keyword">if</span> a<span class="token punctuation">:</span> <span class="token comment"># evaluates to True</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>     <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;the list is not empty!&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token comment"># the list is not empty!</span>
</code></pre>`,1),H="Python len() built-in function - Python Cheatsheet",S="Return the length (the number of items) of an object. The argument may be a sequence (such as a string, bytes, tuple, list, or range) or a collection (such as a dictionary, set, or frozen set).",A=[{property:"og:title",content:"Python len() built-in function - Python Cheatsheet"},{property:"og:description",content:"Return the length (the number of items) of an object. The argument may be a sequence (such as a string, bytes, tuple, list, or range) or a collection (such as a dictionary, set, or frozen set)."},{name:"description",content:"Return the length (the number of items) of an object. The argument may be a sequence (such as a string, bytes, tuple, list, or range) or a collection (such as a dictionary, set, or frozen set)."}],D={__name:"40-len",setup(C,{expose:p}){const e={title:"Python len() built-in function - Python Cheatsheet",description:"Return the length (the number of items) of an object. The argument may be a sequence (such as a string, bytes, tuple, list, or range) or a collection (such as a dictionary, set, or frozen set).",meta:[{property:"og:title",content:"Python len() built-in function - Python Cheatsheet"},{property:"og:description",content:"Return the length (the number of items) of an object. The argument may be a sequence (such as a string, bytes, tuple, list, or range) or a collection (such as a dictionary, set, or frozen set)."},{name:"description",content:"Return the length (the number of items) of an object. The argument may be a sequence (such as a string, bytes, tuple, list, or range) or a collection (such as a dictionary, set, or frozen set)."}]};return p({frontmatter:e}),f({title:"Python len() built-in function - Python Cheatsheet",meta:[{property:"og:title",content:"Python len() built-in function - Python Cheatsheet"},{property:"og:description",content:"Return the length (the number of items) of an object. The argument may be a sequence (such as a string, bytes, tuple, list, or range) or a collection (such as a dictionary, set, or frozen set)."},{name:"description",content:"Return the length (the number of items) of an object. The argument may be a sequence (such as a string, bytes, tuple, list, or range) or a collection (such as a dictionary, set, or frozen set)."}]}),(B,N)=>{const c=P,i=d,l=y,u=b,r=_,h=k,m=g;return T(),q("div",j,[n(c,{title:e.title,description:e.description},{default:t(()=>[s(" Python len() built-in function ")]),_:1},8,["title","description"]),n(u,null,{default:t(()=>[n(i,null,{default:t(()=>[s(" From the "),R]),_:1}),n(l,null,{default:t(()=>[s(" Return the length (the number of items) of an object. The argument may be a sequence (such as a string, bytes, tuple, list, or range) or a collection (such as a dictionary, set, or frozen set). ")]),_:1})]),_:1}),w,n(m,null,{default:t(()=>[n(r,null,{default:t(()=>[s("Test of emptiness")]),_:1}),n(h,null,{default:t(()=>[s(" Test of emptiness of strings, lists, dictionaries, etc., should not use "),z,s(", but prefer direct boolean evaluation. ")]),_:1})]),_:1}),x])}}};export{D as default,S as description,A as meta,H as title};
