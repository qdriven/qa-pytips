import{_ as c}from"./EmptySection.79a00cae.js";import{_ as l,a as b,b as p}from"./BaseDisclaimerTitle.631caf82.js";import{q as m,o as g,c as d,b as t,f as e,B as f,s as n,e as _}from"./app.e6b4b7b5.js";import"./BaseWarningTitle.f5a386c9.js";const y={class:"markdown-body"},x=_("a",{target:"_blank",href:"https://docs.python.org/3/library/functions.html#setattr"},"Python 3 documentation",-1),k="Python setattr() built-in function - Python Cheatsheet",B="This is the counterpart of getattr(). The arguments are an object, a string, and an arbitrary value. The string may name an existing attribute or a new attribute. The function assigns the value to the attribute, provided the object allows it. For example, setattr(x, 'foobar', 123) is equivalent to x.foobar = 123.",N=[{property:"og:title",content:"Python setattr() built-in function - Python Cheatsheet"},{property:"og:description",content:"This is the counterpart of getattr(). The arguments are an object, a string, and an arbitrary value. The string may name an existing attribute or a new attribute. The function assigns the value to the attribute, provided the object allows it. For example, setattr(x, 'foobar', 123) is equivalent to x.foobar = 123."},{name:"description",content:"This is the counterpart of getattr(). The arguments are an object, a string, and an arbitrary value. The string may name an existing attribute or a new attribute. The function assigns the value to the attribute, provided the object allows it. For example, setattr(x, 'foobar', 123) is equivalent to x.foobar = 123."}],V={__name:"61-setattr",setup(v,{expose:o}){const a={title:"Python setattr() built-in function - Python Cheatsheet",description:"This is the counterpart of getattr(). The arguments are an object, a string, and an arbitrary value. The string may name an existing attribute or a new attribute. The function assigns the value to the attribute, provided the object allows it. For example, setattr(x, 'foobar', 123) is equivalent to x.foobar = 123.",meta:[{property:"og:title",content:"Python setattr() built-in function - Python Cheatsheet"},{property:"og:description",content:"This is the counterpart of getattr(). The arguments are an object, a string, and an arbitrary value. The string may name an existing attribute or a new attribute. The function assigns the value to the attribute, provided the object allows it. For example, setattr(x, 'foobar', 123) is equivalent to x.foobar = 123."},{name:"description",content:"This is the counterpart of getattr(). The arguments are an object, a string, and an arbitrary value. The string may name an existing attribute or a new attribute. The function assigns the value to the attribute, provided the object allows it. For example, setattr(x, 'foobar', 123) is equivalent to x.foobar = 123."}]};return o({frontmatter:a}),m({title:"Python setattr() built-in function - Python Cheatsheet",meta:[{property:"og:title",content:"Python setattr() built-in function - Python Cheatsheet"},{property:"og:description",content:"This is the counterpart of getattr(). The arguments are an object, a string, and an arbitrary value. The string may name an existing attribute or a new attribute. The function assigns the value to the attribute, provided the object allows it. For example, setattr(x, 'foobar', 123) is equivalent to x.foobar = 123."},{name:"description",content:"This is the counterpart of getattr(). The arguments are an object, a string, and an arbitrary value. The string may name an existing attribute or a new attribute. The function assigns the value to the attribute, provided the object allows it. For example, setattr(x, 'foobar', 123) is equivalent to x.foobar = 123."}]}),(w,j)=>{const r=f,i=b,s=p,u=l,h=c;return g(),d("div",y,[t(r,{title:a.title,description:a.description},{default:e(()=>[n(" Python setattr() built-in function ")]),_:1},8,["title","description"]),t(u,null,{default:e(()=>[t(i,null,{default:e(()=>[n(" From the "),x]),_:1}),t(s,null,{default:e(()=>[n(" This is the counterpart of getattr(). The arguments are an object, a string, and an arbitrary value. The string may name an existing attribute or a new attribute. The function assigns the value to the attribute, provided the object allows it. For example, setattr(x, 'foobar', 123) is equivalent to x.foobar = 123. ")]),_:1})]),_:1}),t(h)])}}};export{V as default,B as description,N as meta,k as title};
