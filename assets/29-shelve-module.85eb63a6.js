import{_ as i,a as u,b as r}from"./BaseDisclaimerTitle.631caf82.js";import{q as h,o as k,c as d,b as n,f as s,t as y,B as b,s as t,e as f}from"./app.e6b4b7b5.js";const g={class:"markdown-body"},m=f("a",{target:"_blank",href:"https://docs.python.org/3/library/shelve.html"},"Python 3 documentation",-1),_=y(`<h2 id="save-variables" tabindex="-1">Save variables</h2><pre class="language-python"><code class="language-python"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token keyword">import</span> shelve

<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> wife <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;Pretty&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Lovely&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Nice&#39;</span><span class="token punctuation">]</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token keyword">with</span> shelve<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;mydata&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> shelf_file<span class="token punctuation">:</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>     shelf_file<span class="token punctuation">[</span><span class="token string">&#39;wife&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> wife
</code></pre><h2 id="open-and-read-variables" tabindex="-1">Open and read variables</h2><pre class="language-python"><code class="language-python"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token keyword">with</span> shelve<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;mydata&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> shelf_file<span class="token punctuation">:</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>     <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">(</span>shelf_file<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>     <span class="token keyword">print</span><span class="token punctuation">(</span>shelf_file<span class="token punctuation">[</span><span class="token string">&#39;wife&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token comment"># &lt;class &#39;shelve.DbfilenameShelf&#39;&gt;</span>
<span class="token comment"># [&#39;Pretty&#39;, &#39;Lovely&#39;, &#39;Nice&#39;]</span>
</code></pre><p>Just like dictionaries, <code>shelf</code> values have <code>keys()</code> and <code>values()</code> methods that will return list-like values of the keys and values in the shelf. Since these methods return list-like values instead of true lists, you should pass them to the <code>list()</code> function to get them in list form.</p><pre class="language-python"><code class="language-python"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token keyword">with</span> shelve<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;mydata&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> shelf_file<span class="token punctuation">:</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>     <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">(</span>shelf_file<span class="token punctuation">.</span>keys<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>     <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">(</span>shelf_file<span class="token punctuation">.</span>values<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token comment"># [&#39;wife&#39;]</span>
<span class="token comment"># [[&#39;Pretty&#39;, &#39;Lovely&#39;, &#39;Nice&#39;]]</span>
</code></pre>`,6),C="Python Shelve Module - Python Cheatsheet",M="A \u201Cshelf\u201D is a persistent, dictionary-like object. in a shelf can be essentially arbitrary Python objects \u2014 anything that the pickle module can handle.",N=[{property:"og:title",content:"Python Shelve Module - Python Cheatsheet"},{property:"og:description",content:"A \u201Cshelf\u201D is a persistent, dictionary-like object. in a shelf can be essentially arbitrary Python objects \u2014 anything that the pickle module can handle."},{name:"description",content:"A \u201Cshelf\u201D is a persistent, dictionary-like object. in a shelf can be essentially arbitrary Python objects \u2014 anything that the pickle module can handle."}],x={__name:"29-shelve-module",setup(v,{expose:e}){const a={title:"Python Shelve Module - Python Cheatsheet",description:"A \u201Cshelf\u201D is a persistent, dictionary-like object. in a shelf can be essentially arbitrary Python objects \u2014 anything that the pickle module can handle.",meta:[{property:"og:title",content:"Python Shelve Module - Python Cheatsheet"},{property:"og:description",content:"A \u201Cshelf\u201D is a persistent, dictionary-like object. in a shelf can be essentially arbitrary Python objects \u2014 anything that the pickle module can handle."},{name:"description",content:"A \u201Cshelf\u201D is a persistent, dictionary-like object. in a shelf can be essentially arbitrary Python objects \u2014 anything that the pickle module can handle."}]};return e({frontmatter:a}),h({title:"Python Shelve Module - Python Cheatsheet",meta:[{property:"og:title",content:"Python Shelve Module - Python Cheatsheet"},{property:"og:description",content:"A \u201Cshelf\u201D is a persistent, dictionary-like object. in a shelf can be essentially arbitrary Python objects \u2014 anything that the pickle module can handle."},{name:"description",content:"A \u201Cshelf\u201D is a persistent, dictionary-like object. in a shelf can be essentially arbitrary Python objects \u2014 anything that the pickle module can handle."}]}),(w,j)=>{const o=b,p=u,c=r,l=i;return k(),d("div",g,[n(o,{title:a.title,description:a.description},{default:s(()=>[t(" Python Shelve Module ")]),_:1},8,["title","description"]),n(l,null,{default:s(()=>[n(p,null,{default:s(()=>[t(" From the "),m]),_:1}),n(c,null,{default:s(()=>[t(" A \u201Cshelf\u201D is a persistent, dictionary-like object. The difference with \u201Cdbm\u201D databases is that the values (not the keys!) in a shelf can be essentially arbitrary Python objects \u2014 anything that the pickle module can handle. This includes most class instances, recursive data types, and objects containing lots of shared sub-objects. The keys are ordinary strings. ")]),_:1})]),_:1}),_])}}};export{x as default,M as description,N as meta,C as title};
