import{_ as r,a as i,b as d}from"./BaseDisclaimerTitle.631caf82.js";import{q as g,o as m,c as y,b as s,f as a,t as l,e as t,s as n,B as h}from"./app.e6b4b7b5.js";const b={class:"markdown-body"},w=l(`<h2 id="comparison-operators" tabindex="-1">Comparison Operators</h2><table><thead><tr><th>Operator</th><th>Meaning</th></tr></thead><tbody><tr><td><code>==</code></td><td>Equal to</td></tr><tr><td><code>!=</code></td><td>Not equal to</td></tr><tr><td><code>&lt;</code></td><td>Less than</td></tr><tr><td><code>&gt;</code></td><td>Greater Than</td></tr><tr><td><code>&lt;=</code></td><td>Less than or Equal to</td></tr><tr><td><code>&gt;=</code></td><td>Greater than or Equal to</td></tr></tbody></table><p>\u8FD9\u4E9B\u8FD0\u7B97\u7B26\u6839\u636E\u4F60\u7ED9\u5B83\u4EEC\u7684\u503C\uFF0C\u8BC4\u4F30\u4E3A\u771F\u6216\u5047\u3002</p><pre class="language-python"><code class="language-python"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token number">42</span> <span class="token operator">==</span> <span class="token number">42</span>
<span class="token boolean">True</span>

<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token number">40</span> <span class="token operator">==</span> <span class="token number">42</span>
<span class="token boolean">False</span>

<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token string">&#39;hello&#39;</span> <span class="token operator">==</span> <span class="token string">&#39;hello&#39;</span>
<span class="token boolean">True</span>

<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token string">&#39;hello&#39;</span> <span class="token operator">==</span> <span class="token string">&#39;Hello&#39;</span>
<span class="token boolean">False</span>

<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token string">&#39;dog&#39;</span> <span class="token operator">!=</span> <span class="token string">&#39;cat&#39;</span>
<span class="token boolean">True</span>

<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token number">42</span> <span class="token operator">==</span> <span class="token number">42.0</span>
<span class="token boolean">True</span>

<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token number">42</span> <span class="token operator">==</span> <span class="token string">&#39;42&#39;</span>
<span class="token boolean">False</span>
</code></pre><h2 id="boolean-operators" tabindex="-1">Boolean Operators</h2><p>\u6709\u4E09\u4E2A\u5E03\u5C14\u8FD0\u7B97\u7B26:<code>and&#39;, </code>or\u2019, \u548C\`not\u2019\u3002</p><p>The <code>and</code> Operator\u2019s <em>Truth</em> Table:</p><table><thead><tr><th>Expression</th><th>Evaluates to</th></tr></thead><tbody><tr><td><code>True and True</code></td><td><code>True</code></td></tr><tr><td><code>True and False</code></td><td><code>False</code></td></tr><tr><td><code>False and True</code></td><td><code>False</code></td></tr><tr><td><code>False and False</code></td><td><code>False</code></td></tr></tbody></table><p>The <code>or</code> Operator\u2019s <em>Truth</em> Table:</p><table><thead><tr><th>Expression</th><th>Evaluates to</th></tr></thead><tbody><tr><td><code>True or True</code></td><td><code>True</code></td></tr><tr><td><code>True or False</code></td><td><code>True</code></td></tr><tr><td><code>False or True</code></td><td><code>True</code></td></tr><tr><td><code>False or False</code></td><td><code>False</code></td></tr></tbody></table><p>The <code>not</code> Operator\u2019s <em>Truth</em> Table:</p><table><thead><tr><th>Expression</th><th>Evaluates to</th></tr></thead><tbody><tr><td><code>not True</code></td><td><code>False</code></td></tr><tr><td><code>not False</code></td><td><code>True</code></td></tr></tbody></table><h2 id="mixing-operators" tabindex="-1">Mixing Operators</h2><p>\u4F60\u53EF\u4EE5\u6DF7\u5408\u4F7F\u7528\u5E03\u5C14\u8FD0\u7B97\u7B26\u548C\u6BD4\u8F83\u8FD0\u7B97\u7B26:</p><pre class="language-python"><code class="language-python"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token punctuation">(</span><span class="token number">4</span> <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token keyword">and</span> <span class="token punctuation">(</span><span class="token number">5</span> <span class="token operator">&lt;</span> <span class="token number">6</span><span class="token punctuation">)</span>
<span class="token boolean">True</span>

<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token punctuation">(</span><span class="token number">4</span> <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token keyword">and</span> <span class="token punctuation">(</span><span class="token number">9</span> <span class="token operator">&lt;</span> <span class="token number">6</span><span class="token punctuation">)</span>
<span class="token boolean">False</span>

<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token keyword">or</span> <span class="token punctuation">(</span><span class="token number">2</span> <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">)</span>
<span class="token boolean">True</span>
</code></pre><p>\u53E6\u5916\uFF0C\u4F60\u53EF\u4EE5\u5728\u4E00\u4E2A\u8868\u8FBE\u5F0F\u4E2D\u6DF7\u5408\u4F7F\u7528\u591A\u4E2A\u5E03\u5C14\u8FD0\u7B97\u7B26\uFF0C\u4EE5\u53CA\u6BD4\u8F83\u8FD0\u7B97\u7B26:</p><pre class="language-python"><code class="language-python"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token number">2</span> <span class="token operator">+</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">4</span> <span class="token keyword">and</span> <span class="token keyword">not</span> <span class="token number">2</span> <span class="token operator">+</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">5</span> <span class="token keyword">and</span> <span class="token number">2</span> <span class="token operator">*</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">2</span> <span class="token operator">+</span> <span class="token number">2</span>
<span class="token boolean">True</span>
</code></pre><h2 id="if-statements" tabindex="-1">if Statements</h2><p>if &quot;\u8BED\u53E5\u8BC4\u4F30\u4E00\u4E2A\u8868\u8FBE\u5F0F\uFF0C\u5982\u679C\u8BE5\u8868\u8FBE\u5F0F\u4E3A \u201CTrue\u201D\uFF0C\u5219\u6267\u884C\u4EE5\u4E0B\u7F29\u8FDB\u4EE3\u7801:</p><pre class="language-python"><code class="language-python"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> name <span class="token operator">=</span> <span class="token string">&#39;Debora&#39;</span>

<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token keyword">if</span> name <span class="token operator">==</span> <span class="token string">&#39;Debora&#39;</span><span class="token punctuation">:</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;Hi, Debora&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token comment"># Hi, Debora</span>

<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token keyword">if</span> name <span class="token operator">!=</span> <span class="token string">&#39;George&#39;</span><span class="token punctuation">:</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;You are not George&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token comment"># You are not George</span>
</code></pre><p>\u53EA\u6709\u5F53 &quot;if &quot;\u548C\u6240\u6709 &quot;elif &quot;\u8868\u8FBE\u5F0F\u7684\u8BC4\u4F30\u7ED3\u679C\u4E3A &quot;False &quot;\u65F6\uFF0C&quot;else &quot;\u8BED\u53E5\u624D\u4F1A\u6267\u884C:</p><pre class="language-python"><code class="language-python"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> name <span class="token operator">=</span> <span class="token string">&#39;Debora&#39;</span>

<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token keyword">if</span> name <span class="token operator">==</span> <span class="token string">&#39;George&#39;</span><span class="token punctuation">:</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;Hi, George.&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token keyword">else</span><span class="token punctuation">:</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;You are not George&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token comment"># You are not George</span>
</code></pre><p>\u53EA\u6709\u5728 &quot;if &quot;\u8BED\u53E5\u8868\u8FBE\u5F0F\u4E3A &quot;False &quot;\u540E\uFF0C&quot;elif &quot;\u8BED\u53E5\u624D\u88AB\u8BC4\u4F30\u548C\u6267\u884C\u3002</p><pre class="language-python"><code class="language-python"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> name <span class="token operator">=</span> <span class="token string">&#39;George&#39;</span>

<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token keyword">if</span> name <span class="token operator">==</span> <span class="token string">&#39;Debora&#39;</span><span class="token punctuation">:</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;Hi Debora!&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token keyword">elif</span> name <span class="token operator">==</span> <span class="token string">&#39;George&#39;</span><span class="token punctuation">:</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;Hi George!&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token comment"># Hi George!</span>
</code></pre><p>the <code>elif</code> and <code>else</code> parts are optional.</p><pre class="language-python"><code class="language-python"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> name <span class="token operator">=</span> <span class="token string">&#39;Antony&#39;</span>

<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token keyword">if</span> name <span class="token operator">==</span> <span class="token string">&#39;Debora&#39;</span><span class="token punctuation">:</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;Hi Debora!&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token keyword">elif</span> name <span class="token operator">==</span> <span class="token string">&#39;George&#39;</span><span class="token punctuation">:</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;Hi George!&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token keyword">else</span><span class="token punctuation">:</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;Who are you?&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token comment"># Who are you?</span>
</code></pre><h2 id="" tabindex="-1">\u4E09\u5143\u6761\u4EF6\u8FD0\u7B97\u7B26</h2><p>\u8BB8\u591A\u7F16\u7A0B\u8BED\u8A00\u90FD\u6709\u4E00\u4E2A\u4E09\u5143\u8FD0\u7B97\u7B26\uFF0C\u5B83\u5B9A\u4E49\u4E86\u4E00\u4E2A\u6761\u4EF6\u8868\u8FBE\u5F0F\u3002\u6700\u5E38\u89C1\u7684\u7528\u6CD5\u662F\u505A\u4E00\u4E2A\u7B80\u6D01\u7684\u3001\u7B80\u5355\u7684\u6761\u4EF6\u8D4B\u503C\u8BED\u53E5\u3002\u6362\u53E5\u8BDD\u8BF4\uFF0C\u5B83\u63D0\u4F9B\u4E86\u5355\u884C\u4EE3\u7801\uFF0C\u5982\u679C\u6761\u4EF6\u4E3A\u771F\uFF0C\u5C31\u8BC4\u4F30\u7B2C\u4E00\u4E2A\u8868\u8FBE\u5F0F\uFF0C\u5426\u5219\u5C31\u8BC4\u4F30\u7B2C\u4E8C\u4E2A\u8868\u8FBE\u5F0F:</p><pre><code>&lt;expression1&gt; if &lt;condition&gt; else &lt;expression2&gt;
</code></pre><p>Example:</p><pre class="language-python"><code class="language-python"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> age <span class="token operator">=</span> <span class="token number">15</span>

<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token comment"># this if statement:</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token keyword">if</span> age <span class="token operator">&lt;</span> <span class="token number">18</span><span class="token punctuation">:</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;kid&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token keyword">else</span><span class="token punctuation">:</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;adult&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token comment"># output: kid</span>

<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token comment"># is equivalent to this ternary operator:</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;kid&#39;</span> <span class="token keyword">if</span> age <span class="token operator">&lt;</span> <span class="token number">18</span> <span class="token keyword">else</span> <span class="token string">&#39;adult&#39;</span><span class="token punctuation">)</span>
<span class="token comment"># output: kid</span>
</code></pre><p>Ternary operators can be chained:</p><pre class="language-python"><code class="language-python"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> age <span class="token operator">=</span> <span class="token number">15</span>

<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token comment"># this ternary operator:</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;kid&#39;</span> <span class="token keyword">if</span> age <span class="token operator">&lt;</span> <span class="token number">13</span> <span class="token keyword">else</span> <span class="token string">&#39;teen&#39;</span> <span class="token keyword">if</span> age <span class="token operator">&lt;</span> <span class="token number">18</span> <span class="token keyword">else</span> <span class="token string">&#39;adult&#39;</span><span class="token punctuation">)</span>

<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token comment"># is equivalent to this if statement:</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token keyword">if</span> age <span class="token operator">&lt;</span> <span class="token number">18</span><span class="token punctuation">:</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>     <span class="token keyword">if</span> age <span class="token operator">&lt;</span> <span class="token number">13</span><span class="token punctuation">:</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>         <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;kid&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>     <span class="token keyword">else</span><span class="token punctuation">:</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>         <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;teen&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token keyword">else</span><span class="token punctuation">:</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>     <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;adult&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token comment"># output: teen</span>
</code></pre><h2 id="switch-case-statement" tabindex="-1">Switch-Case Statement</h2>`,34),_=t("p",null,[t("em",null,"Switch-Case\u8BED\u53E5"),n("\uFF0C\u5373"),t("strong",null,"\u7ED3\u6784\u6A21\u5F0F\u5339\u914D"),n("\uFF0C\u4E8E2020\u5E74\u9996\u6B21\u901A\u8FC7[PEP 622]\uFF08"),t("a",{href:"https://peps.python.org/pep-0622/%EF%BC%89%E5%BC%95%E5%85%A5%EF%BC%8C%E7%84%B6%E5%90%8E%E4%BA%8E2022%E5%B9%B49%E6%9C%88%E9%9A%8F**Python",target:"_blank",rel:"noopener"},"https://peps.python.org/pep-0622/\uFF09\u5F15\u5165\uFF0C\u7136\u540E\u4E8E2022\u5E749\u6708\u968F**Python"),n(" 3.10**\u6B63\u5F0F\u53D1\u5E03\u3002")],-1),f=t("a",{href:"https://peps.python.org/pep-0636/",target:"_blank"},"PEP 636",-1),q=l(`<h3 id="matching-single-values" tabindex="-1">Matching single values</h3><pre class="language-python"><code class="language-python"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> response_code <span class="token operator">=</span> <span class="token number">201</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token keyword">match</span> response_code<span class="token punctuation">:</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>     <span class="token keyword">case</span> <span class="token number">200</span><span class="token punctuation">:</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>         <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;OK&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>     <span class="token keyword">case</span> <span class="token number">201</span><span class="token punctuation">:</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>         <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Created&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>     <span class="token keyword">case</span> <span class="token number">300</span><span class="token punctuation">:</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>         <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Multiple Choices&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>     <span class="token keyword">case</span> <span class="token number">307</span><span class="token punctuation">:</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>         <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Temporary Redirect&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>     <span class="token keyword">case</span> <span class="token number">404</span><span class="token punctuation">:</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>         <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;404 Not Found&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>     <span class="token keyword">case</span> <span class="token number">500</span><span class="token punctuation">:</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>         <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Internal Server Error&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>     <span class="token keyword">case</span> <span class="token number">502</span><span class="token punctuation">:</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>         <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;502 Bad Gateway&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token comment"># Created</span>
</code></pre><h3 id="or" tabindex="-1">\u7528 or \u6A21\u5F0F\u8FDB\u884C\u5339\u914D</h3><p>\u5728\u8FD9\u4E2A\u4F8B\u5B50\u4E2D\uFF0C\u7BA1\u9053\u5B57\u7B26(<code>|</code>\u6216<code>or</code>)\u5141\u8BB8python\u5BF9\u4E24\u79CD\u6216\u591A\u79CD\u60C5\u51B5\u8FD4\u56DE\u76F8\u540C\u7684\u54CD\u5E94\u3002</p><pre class="language-python"><code class="language-python"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> response_code <span class="token operator">=</span> <span class="token number">502</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token keyword">match</span> response_code<span class="token punctuation">:</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>     <span class="token keyword">case</span> <span class="token number">200</span> <span class="token operator">|</span> <span class="token number">201</span><span class="token punctuation">:</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>         <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;OK&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>     <span class="token keyword">case</span> <span class="token number">300</span> <span class="token operator">|</span> <span class="token number">307</span><span class="token punctuation">:</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>         <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Redirect&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>     <span class="token keyword">case</span> <span class="token number">400</span> <span class="token operator">|</span> <span class="token number">401</span><span class="token punctuation">:</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>         <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Bad Request&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>     <span class="token keyword">case</span> <span class="token number">500</span> <span class="token operator">|</span> <span class="token number">502</span><span class="token punctuation">:</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>         <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Internal Server Error&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token comment"># Internal Server Error</span>
</code></pre><h3 id="iterable" tabindex="-1">\u901A\u8FC7Iterable\u7684\u957F\u5EA6\u8FDB\u884C\u5339\u914D</h3><pre class="language-python"><code class="language-python"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> today_responses <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">,</span> <span class="token number">404</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">]</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token keyword">match</span> today_responses<span class="token punctuation">:</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>     <span class="token keyword">case</span> <span class="token punctuation">[</span>a<span class="token punctuation">]</span><span class="token punctuation">:</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>             <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;One response today: </span><span class="token interpolation"><span class="token punctuation">{</span>a<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>     <span class="token keyword">case</span> <span class="token punctuation">[</span>a<span class="token punctuation">,</span> b<span class="token punctuation">]</span><span class="token punctuation">:</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>             <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;Two responses today: </span><span class="token interpolation"><span class="token punctuation">{</span>a<span class="token punctuation">}</span></span><span class="token string"> and </span><span class="token interpolation"><span class="token punctuation">{</span>b<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>     <span class="token keyword">case</span> <span class="token punctuation">[</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> <span class="token operator">*</span>rest<span class="token punctuation">]</span><span class="token punctuation">:</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>             <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;All responses: </span><span class="token interpolation"><span class="token punctuation">{</span>a<span class="token punctuation">}</span></span><span class="token string">, </span><span class="token interpolation"><span class="token punctuation">{</span>b<span class="token punctuation">}</span></span><span class="token string">, </span><span class="token interpolation"><span class="token punctuation">{</span>rest<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token comment"># All responses: 200, 300, [404, 500]</span>
</code></pre><h3 id="-1" tabindex="-1">\u9ED8\u8BA4\u503C</h3><p>\u4E0B\u5212\u7EBF\u7B26\u53F7(<code>_</code>)\u662F\u7528\u6765\u5B9A\u4E49\u9ED8\u8BA4\u60C5\u51B5\u7684:</p><pre class="language-python"><code class="language-python"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> response_code <span class="token operator">=</span> <span class="token number">800</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token keyword">match</span> response_code<span class="token punctuation">:</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>     <span class="token keyword">case</span> <span class="token number">200</span> <span class="token operator">|</span> <span class="token number">201</span><span class="token punctuation">:</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>         <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;OK&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>     <span class="token keyword">case</span> <span class="token number">300</span> <span class="token operator">|</span> <span class="token number">307</span><span class="token punctuation">:</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>         <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Redirect&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>     <span class="token keyword">case</span> <span class="token number">400</span> <span class="token operator">|</span> <span class="token number">401</span><span class="token punctuation">:</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>         <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Bad Request&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>     <span class="token keyword">case</span> <span class="token number">500</span> <span class="token operator">|</span> <span class="token number">502</span><span class="token punctuation">:</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>         <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Internal Server Error&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>     <span class="token keyword">case</span> <span class="token keyword">_</span><span class="token punctuation">:</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>         <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Invalid Code&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token comment"># Invalid Code</span>
</code></pre><h3 id="-2" tabindex="-1">\u5339\u914D\u7684\u5185\u7F6E\u7C7B</h3><pre class="language-python"><code class="language-python"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> response_code <span class="token operator">=</span> <span class="token string">&quot;300&quot;</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token keyword">match</span> response_code<span class="token punctuation">:</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>     <span class="token keyword">case</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>             <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;Code is a number&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>     <span class="token keyword">case</span> <span class="token builtin">str</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>             <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;Code is a string&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>     <span class="token keyword">case</span> <span class="token keyword">_</span><span class="token punctuation">:</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>             <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;Code is neither a string nor a number&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token comment"># Code is a string</span>
</code></pre><h3 id="guarding-match-case-statements" tabindex="-1">Guarding Match-Case Statements</h3><pre class="language-python"><code class="language-python"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> response_code <span class="token operator">=</span> <span class="token number">300</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token keyword">match</span> response_code<span class="token punctuation">:</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>     <span class="token keyword">case</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>             <span class="token keyword">if</span> response_code <span class="token operator">&gt;</span> <span class="token number">99</span> <span class="token keyword">and</span> response_code <span class="token operator">&lt;</span> <span class="token number">500</span><span class="token punctuation">:</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>                 <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;Code is a valid number&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>     <span class="token keyword">case</span> <span class="token keyword">_</span><span class="token punctuation">:</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>             <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;Code is an invalid number&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token comment"># Code is a valid number</span>
</code></pre><h2 id="while" tabindex="-1">while \u5FAA\u73AF\u8BED\u53E5</h2><p>while\u8BED\u53E5\u7528\u4E8E\u91CD\u590D\u6267\u884C\uFF0C\u53EA\u8981\u4E00\u4E2A\u8868\u8FBE\u5F0F\u662F\`True\u2019:</p><pre class="language-python"><code class="language-python"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> spam <span class="token operator">=</span> <span class="token number">0</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token keyword">while</span> spam <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">:</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>     <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;Hello, world.&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>     spam <span class="token operator">=</span> spam <span class="token operator">+</span> <span class="token number">1</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token comment"># Hello, world.</span>
<span class="token comment"># Hello, world.</span>
<span class="token comment"># Hello, world.</span>
<span class="token comment"># Hello, world.</span>
<span class="token comment"># Hello, world.</span>
</code></pre><h2 id="break-statements" tabindex="-1">break Statements</h2><p>\u5982\u679C\u6267\u884C\u5230\u4E00\u4E2A<code>break</code>\u8BED\u53E5, \u5C31\u7ACB\u5373\u9000\u51FA<code>while</code>\u5FAA\u73AF\u7684\u5B50\u53E5:</p><pre class="language-python"><code class="language-python"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>     name <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&#39;Please type your name: &#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>     <span class="token keyword">if</span> name <span class="token operator">==</span> <span class="token string">&#39;your name&#39;</span><span class="token punctuation">:</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>         <span class="token keyword">break</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;Thank you!&#39;</span><span class="token punctuation">)</span>
<span class="token comment"># Please type your name: your name</span>
<span class="token comment"># Thank you!</span>
</code></pre><h2 id="continue-statements" tabindex="-1">continue Statements</h2><p>\u5F53\u7A0B\u5E8F\u6267\u884C\u5230\u4E00\u4E2A<code>continue</code>\u8BED\u53E5\u65F6, \u7A0B\u5E8F\u7684\u6267\u884C\u4F1A\u7ACB\u5373\u8DF3\u56DE\u5230\u5FAA\u73AF\u7684\u8D77\u70B9.</p><pre class="language-python"><code class="language-python"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>     name <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&#39;Who are you? &#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>     <span class="token keyword">if</span> name <span class="token operator">!=</span> <span class="token string">&#39;Joe&#39;</span><span class="token punctuation">:</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>         <span class="token keyword">continue</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>     password <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&#39;Password? (It is a fish.): &#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>     <span class="token keyword">if</span> password <span class="token operator">==</span> <span class="token string">&#39;swordfish&#39;</span><span class="token punctuation">:</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>         <span class="token keyword">break</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;Access granted.&#39;</span><span class="token punctuation">)</span>
<span class="token comment"># Who are you? Charles</span>
<span class="token comment"># Who are you? Debora</span>
<span class="token comment"># Who are you? Joe</span>
<span class="token comment"># Password? (It is a fish.): swordfish</span>
<span class="token comment"># Access granted.</span>
</code></pre><h2 id="for-loop" tabindex="-1">For loop</h2><p><code>for</code>\u5FAA\u73AF\u5728\u4E00\u4E2A<code>\u5217\u8868</code>, <code>\u5143\u7EC4</code>, dictionary<code>, </code>\u96C6\u5408<code>\u6216</code>\u5B57\u7B26\u4E32\`\u4E0A\u8FDB\u884C\u8FED\u4EE3:</p><pre class="language-python"><code class="language-python"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> pets <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;Bella&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Milo&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Loki&#39;</span><span class="token punctuation">]</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token keyword">for</span> pet <span class="token keyword">in</span> pets<span class="token punctuation">:</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>     <span class="token keyword">print</span><span class="token punctuation">(</span>pet<span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token comment"># Bella</span>
<span class="token comment"># Milo</span>
<span class="token comment"># Loki</span>
</code></pre><h2 id="the-range-function" tabindex="-1">The range() function</h2><p><code>range()</code>\u51FD\u6570\u8FD4\u56DE\u4E00\u4E2A\u6570\u5B57\u5E8F\u5217. \u5B83\u4ECE0\u5F00\u59CB, \u4EE51\u9012\u589E, \u5E76\u5728\u6307\u5B9A\u7684\u6570\u5B57\u524D\u505C\u6B62:</p><pre class="language-python"><code class="language-python"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>     <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;Will stop at 5! or 4? (</span><span class="token interpolation"><span class="token punctuation">{</span>i<span class="token punctuation">}</span></span><span class="token string">)&#39;</span></span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token comment"># Will stop at 5! or 4? (0)</span>
<span class="token comment"># Will stop at 5! or 4? (1)</span>
<span class="token comment"># Will stop at 5! or 4? (2)</span>
<span class="token comment"># Will stop at 5! or 4? (3)</span>
<span class="token comment"># Will stop at 5! or 4? (4)</span>
</code></pre><p><code>range()</code>\u51FD\u6570\u4E5F\u53EF\u4EE5\u4FEE\u6539\u5B83\u76843\u4E2A\u9ED8\u8BA4\u53C2\u6570\u3002\u524D\u4E24\u4E2A\u662F<code>start&#39;\u548C</code>stop\u2019\u503C\uFF0C\u7B2C\u4E09\u4E2A\u662F\`step\u2019\u53C2\u6570\u3002\u6B65\u9AA4\u662F\u53D8\u91CF\u5728\u6BCF\u6B21\u8FED\u4EE3\u540E\u589E\u52A0\u7684\u6570\u91CF\u3002</p><pre class="language-python"><code class="language-python"><span class="token comment"># range(start, stop, step)</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token comment"># 0</span>
<span class="token comment"># 2</span>
<span class="token comment"># 4</span>
<span class="token comment"># 6</span>
<span class="token comment"># 8</span>
</code></pre><p>\u4F60\u751A\u81F3\u53EF\u4EE5\u5728\u6B65\u9AA4\u53C2\u6570\u4E2D\u4F7F\u7528\u4E00\u4E2A\u8D1F\u6570\uFF0C\u4EE5\u4F7Ffor\u5FAA\u73AF\u5411\u4E0B\u800C\u4E0D\u662F\u5411\u4E0A\u8BA1\u6570\u3002</p><pre class="language-python"><code class="language-python"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>     <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token comment"># 5</span>
<span class="token comment"># 4</span>
<span class="token comment"># 3</span>
<span class="token comment"># 2</span>
<span class="token comment"># 1</span>
<span class="token comment"># 0</span>
</code></pre><h2 id="else" tabindex="-1">\u5BF9\u4E8Eelse\u8BED\u53E5</h2><p>\u8FD9\u5141\u8BB8\u6307\u5B9A\u4E00\u4E2A\u8BED\u53E5\uFF0C\u5728\u6574\u4E2A\u5FAA\u73AF\u88AB\u6267\u884C\u7684\u60C5\u51B5\u4E0B\u6267\u884C\u3002\u53EA\u5728 \u5F53\u5FAA\u73AF\u4E2D\u53EF\u80FD\u51FA\u73B0 &quot;break &quot;\u6761\u4EF6\u65F6\u624D\u6709\u7528:</p><pre class="language-python"><code class="language-python"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">:</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>    <span class="token keyword">if</span> i <span class="token operator">==</span> <span class="token number">3</span><span class="token punctuation">:</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>        <span class="token keyword">break</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token keyword">else</span><span class="token punctuation">:</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;only executed when no item is equal to 3&quot;</span><span class="token punctuation">)</span>
</code></pre><h2 id="ending-a-program-with-sysexit" tabindex="-1">Ending a Program with sys.exit()</h2><p><code>exit()</code> function allows exiting Python.</p><pre class="language-python"><code class="language-python"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token keyword">import</span> sys

<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>     feedback <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&#39;Type exit to exit: &#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>     <span class="token keyword">if</span> feedback <span class="token operator">==</span> <span class="token string">&#39;exit&#39;</span><span class="token punctuation">:</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>         <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;You typed </span><span class="token interpolation"><span class="token punctuation">{</span>feedback<span class="token punctuation">}</span></span><span class="token string">.&#39;</span></span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>         sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token comment"># Type exit to exit: open</span>
<span class="token comment"># Type exit to exit: close</span>
<span class="token comment"># Type exit to exit: exit</span>
<span class="token comment"># You typed exit</span>
</code></pre>`,39),v="Python Control Flow - Python Cheatsheet",B="\u63A7\u5236\u6D41\u662F\u5355\u4E2A\u8BED\u53E5\u3001\u6307\u4EE4\u6216\u51FD\u6570\u8C03\u7528\u88AB\u6267\u884C\u6216\u8BC4\u4F30\u7684\u987A\u5E8F\u3002Python\u7A0B\u5E8F\u7684\u63A7\u5236\u6D41\u7531\u6761\u4EF6\u8BED\u53E5\u3001\u5FAA\u73AF\u548C\u51FD\u6570\u8C03\u7528\u6765\u8C03\u8282\u3002",G=[{property:"og:title",content:"Python Control Flow - Python Cheatsheet"},{property:"og:description",content:"\u63A7\u5236\u6D41\u662F\u5355\u4E2A\u8BED\u53E5\u3001\u6307\u4EE4\u6216\u51FD\u6570\u8C03\u7528\u88AB\u6267\u884C\u6216\u8BC4\u4F30\u7684\u987A\u5E8F\u3002Python\u7A0B\u5E8F\u7684\u63A7\u5236\u6D41\u7531\u6761\u4EF6\u8BED\u53E5\u3001\u5FAA\u73AF\u548C\u51FD\u6570\u8C03\u7528\u6765\u8C03\u8282\u3002"},{name:"description",content:"\u63A7\u5236\u6D41\u662F\u5355\u4E2A\u8BED\u53E5\u3001\u6307\u4EE4\u6216\u51FD\u6570\u8C03\u7528\u88AB\u6267\u884C\u6216\u8BC4\u4F30\u7684\u987A\u5E8F\u3002Python\u7A0B\u5E8F\u7684\u63A7\u5236\u6D41\u7531\u6761\u4EF6\u8BED\u53E5\u3001\u5FAA\u73AF\u548C\u51FD\u6570\u8C03\u7528\u6765\u8C03\u8282\u3002"}],H={__name:"2-control-flow",setup(T,{expose:u}){const p={title:"Python Control Flow - Python Cheatsheet",description:"\u63A7\u5236\u6D41\u662F\u5355\u4E2A\u8BED\u53E5\u3001\u6307\u4EE4\u6216\u51FD\u6570\u8C03\u7528\u88AB\u6267\u884C\u6216\u8BC4\u4F30\u7684\u987A\u5E8F\u3002Python\u7A0B\u5E8F\u7684\u63A7\u5236\u6D41\u7531\u6761\u4EF6\u8BED\u53E5\u3001\u5FAA\u73AF\u548C\u51FD\u6570\u8C03\u7528\u6765\u8C03\u8282\u3002",meta:[{property:"og:title",content:"Python Control Flow - Python Cheatsheet"},{property:"og:description",content:"\u63A7\u5236\u6D41\u662F\u5355\u4E2A\u8BED\u53E5\u3001\u6307\u4EE4\u6216\u51FD\u6570\u8C03\u7528\u88AB\u6267\u884C\u6216\u8BC4\u4F30\u7684\u987A\u5E8F\u3002Python\u7A0B\u5E8F\u7684\u63A7\u5236\u6D41\u7531\u6761\u4EF6\u8BED\u53E5\u3001\u5FAA\u73AF\u548C\u51FD\u6570\u8C03\u7528\u6765\u8C03\u8282\u3002"},{name:"description",content:"\u63A7\u5236\u6D41\u662F\u5355\u4E2A\u8BED\u53E5\u3001\u6307\u4EE4\u6216\u51FD\u6570\u8C03\u7528\u88AB\u6267\u884C\u6216\u8BC4\u4F30\u7684\u987A\u5E8F\u3002Python\u7A0B\u5E8F\u7684\u63A7\u5236\u6D41\u7531\u6761\u4EF6\u8BED\u53E5\u3001\u5FAA\u73AF\u548C\u51FD\u6570\u8C03\u7528\u6765\u8C03\u8282\u3002"}]};return u({frontmatter:p}),g({title:"Python Control Flow - Python Cheatsheet",meta:[{property:"og:title",content:"Python Control Flow - Python Cheatsheet"},{property:"og:description",content:"\u63A7\u5236\u6D41\u662F\u5355\u4E2A\u8BED\u53E5\u3001\u6307\u4EE4\u6216\u51FD\u6570\u8C03\u7528\u88AB\u6267\u884C\u6216\u8BC4\u4F30\u7684\u987A\u5E8F\u3002Python\u7A0B\u5E8F\u7684\u63A7\u5236\u6D41\u7531\u6761\u4EF6\u8BED\u53E5\u3001\u5FAA\u73AF\u548C\u51FD\u6570\u8C03\u7528\u6765\u8C03\u8282\u3002"},{name:"description",content:"\u63A7\u5236\u6D41\u662F\u5355\u4E2A\u8BED\u53E5\u3001\u6307\u4EE4\u6216\u51FD\u6570\u8C03\u7528\u88AB\u6267\u884C\u6216\u8BC4\u4F30\u7684\u987A\u5E8F\u3002Python\u7A0B\u5E8F\u7684\u63A7\u5236\u6D41\u7531\u6761\u4EF6\u8BED\u53E5\u3001\u5FAA\u73AF\u548C\u51FD\u6570\u8C03\u7528\u6765\u8C03\u8282\u3002"}]}),(C,P)=>{const k=h,o=i,e=d,c=r;return m(),y("div",b,[s(k,{title:p.title,description:p.description},{default:a(()=>[n(" Python Control Flow ")]),_:1},8,["title","description"]),s(c,null,{default:a(()=>[s(o,null,{default:a(()=>[n(" Python control flow ")]),_:1}),s(e,null,{default:a(()=>[n(" \u63A7\u5236\u6D41\u662F\u5355\u4E2A\u8BED\u53E5\u3001\u6307\u4EE4\u6216\u51FD\u6570\u8C03\u7528\u88AB\u6267\u884C\u6216\u8BC4\u4F30\u7684\u987A\u5E8F\u3002Python\u7A0B\u5E8F\u7684\u63A7\u5236\u6D41\u7531\u6761\u4EF6\u8BED\u53E5\u3001\u5FAA\u73AF\u548C\u51FD\u6570\u8C03\u7528\u6765\u8C03\u8282\u3002 ")]),_:1})]),_:1}),w,s(c,null,{default:a(()=>[s(o,null,{default:a(()=>[n(" Switch-Case statements ")]),_:1}),s(e,null,{default:a(()=>[n(" \u5728\u8BA1\u7B97\u673A\u7F16\u7A0B\u8BED\u8A00\u4E2D\uFF0C\u5207\u6362\u8BED\u53E5\u662F\u4E00\u79CD\u9009\u62E9\u63A7\u5236\u673A\u5236\uFF0C\u7528\u4E8E\u5141\u8BB8\u53D8\u91CF\u6216\u8868\u8FBE\u5F0F\u7684\u503C\u901A\u8FC7\u641C\u7D22\u548C\u6620\u5C04\u6765\u6539\u53D8\u7A0B\u5E8F\u6267\u884C\u7684\u63A7\u5236\u6D41\u3002 ")]),_:1})]),_:1}),_,s(c,null,{default:a(()=>[s(o,null,{default:a(()=>[n(" Official Tutorial ")]),_:1}),s(e,null,{default:a(()=>[n(" The "),f,n(" provides an official tutorial for the Python Pattern matching or Switch-Case statements. ")]),_:1})]),_:1}),q])}}};export{H as default,B as description,G as meta,v as title};
