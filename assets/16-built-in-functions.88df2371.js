import{q as r,o as s,c as d,b as n,f as e,e as t,B as c,r as h,s as l}from"./app.e6b4b7b5.js";const _={class:"markdown-body"},b=t("p",null,"The Python interpreter has a number of functions and types built into it that are always available.",-1),f=t("h2",{id:"python-built-in-functions",tabindex:"-1"},"Python built-in Functions",-1),p=t("thead",null,[t("tr",null,[t("th",null,"Function"),t("th",null,"Description")])],-1),m=t("td",null,"Return the absolute value of a number.",-1),y=t("td",null,"Return an asynchronous iterator for an asynchronous iterable.",-1),g=t("td",null,"Return True if all elements of the iterable are true.",-1),R=t("td",null,"Return True if any element of the iterable is true.",-1),v=t("td",null,"Return a string with a printable representation of an object.",-1),j=t("td",null,"Convert an integer number to a binary string.",-1),w=t("td",null,"Return a Boolean value.",-1),P=t("td",null,"Drops you into the debugger at the call site.",-1),x=t("td",null,"Return a new array of bytes.",-1),T=t("td",null,"Return a new \u201Cbytes\u201D object.",-1),C=t("td",null,"Return True if the object argument is callable, False if not.",-1),k=t("td",null,"Return the string representing a character.",-1),B=t("td",null,"Transform a method into a class method.",-1),z=t("td",null,"Compile the source into a code or AST object.",-1),q=t("td",null,"Return a complex number with the value real + imag*1j.",-1),F=t("td",null,"Deletes the named attribute, provided the object allows it.",-1),D=t("td",null,"Create a new dictionary.",-1),N=t("td",null,"Return the list of names in the current local scope.",-1),V=t("td",null,"Return a pair of numbers consisting of their quotient and remainder.",-1),E=t("td",null,"Return an enumerate object.",-1),I=t("td",null,"Evaluates and executes an expression.",-1),S=t("td",null,"This function supports dynamic execution of Python code.",-1),U=t("td",null,"Construct an iterator from an iterable and returns true.",-1),A=t("td",null,"Return a floating point number from a number or string.",-1),H=t("td",null,"Convert a value to a \u201Cformatted\u201D representation.",-1),O=t("td",null,"Return a new frozenset object.",-1),G=t("td",null,"Return the value of the named attribute of object.",-1),J=t("td",null,"Return the dictionary implementing the current module namespace.",-1),K=t("td",null,"True if the string is the name of one of the object\u2019s attributes.",-1),L=t("td",null,"Return the hash value of the object.",-1),M=t("td",null,"Invoke the built-in help system.",-1),Q=t("td",null,"Convert an integer number to a lowercase hexadecimal string.",-1),W=t("td",null,"Return the \u201Cidentity\u201D of an object.",-1),X=t("td",null,"This function takes an input and converts it into a string.",-1),Y=t("td",null,"Return an integer object constructed from a number or string.",-1),Z=t("td",null,"Return True if the object argument is an instance of an object.",-1),$=t("td",null,"Return True if class is a subclass of classinfo.",-1),tt=t("td",null,"Return an iterator object.",-1),nt=t("td",null,"Return the length (the number of items) of an object.",-1),et=t("td",null,"Rather than being a function, list is a mutable sequence type.",-1),lt=t("td",null,"Update and return a dictionary with the current local symbol table.",-1),ot=t("td",null,"Return an iterator that applies function to every item of iterable.",-1),it=t("td",null,"Return the largest item in an iterable.",-1),ut=t("td",null,"Return the smallest item in an iterable.",-1),at=t("td",null,"Retrieve the next item from the iterator.",-1),rt=t("td",null,"Return a new featureless object.",-1),st=t("td",null,"Convert an integer number to an octal string.",-1),dt=t("td",null,"Open file and return a corresponding file object.",-1),ct=t("td",null,"Return an integer representing the Unicode code point of a character.",-1),ht=t("td",null,"Return base to the power exp.",-1),_t=t("td",null,"Print objects to the text stream file.",-1),bt=t("td",null,"Return a property attribute.",-1),ft=t("td",null,"Return a string containing a printable representation of an object.",-1),pt=t("td",null,"Return a reverse iterator.",-1),mt=t("td",null,"Return number rounded to ndigits precision after the decimal point.",-1),yt=t("td",null,"Return a new set object.",-1),gt=t("td",null,"This is the counterpart of getattr().",-1),Rt=t("td",null,"Return a sliced object representing a set of indices.",-1),vt=t("td",null,"Return a new sorted list from the items in iterable.",-1),jt=t("td",null,"Transform a method into a static method.",-1),wt=t("td",null,"Return a str version of object.",-1),Pt=t("td",null,"Sums start and the items of an iterable.",-1),xt=t("td",null,"Return a proxy object that delegates method calls to a parent or sibling.",-1),Tt=t("td",null,"Rather than being a function, is actually an immutable sequence type.",-1),Ct=t("td",null,"Return the type of an object.",-1),kt=t("td",null,"Return the dict attribute for any other object with a dict attribute.",-1),Bt=t("td",null,"Iterate over several iterables in parallel.",-1),zt=t("strong",null,"import",-1),qt=t("td",null,"This function is invoked by the import statement.",-1),It="Python built-in functions - Python Cheatsheet",St="The Python interpreter has a number of functions and types built into it that are always available.",Ut=[{property:"og:title",content:"Python built-in functions - Python Cheatsheet"},{property:"og:description",content:"The Python interpreter has a number of functions and types built into it that are always available."},{name:"description",content:"The Python interpreter has a number of functions and types built into it that are always available."}],At={__name:"16-built-in-functions",setup(Ft,{expose:u}){const i={title:"Python built-in functions - Python Cheatsheet",description:"The Python interpreter has a number of functions and types built into it that are always available.",meta:[{property:"og:title",content:"Python built-in functions - Python Cheatsheet"},{property:"og:description",content:"The Python interpreter has a number of functions and types built into it that are always available."},{name:"description",content:"The Python interpreter has a number of functions and types built into it that are always available."}]};return u({frontmatter:i}),r({title:"Python built-in functions - Python Cheatsheet",meta:[{property:"og:title",content:"Python built-in functions - Python Cheatsheet"},{property:"og:description",content:"The Python interpreter has a number of functions and types built into it that are always available."},{name:"description",content:"The Python interpreter has a number of functions and types built into it that are always available."}]}),(Nt,Vt)=>{const a=c,o=h("router-link");return s(),d("div",_,[n(a,{title:i.title,description:i.description},{default:e(()=>[l(" Python Built-in Functions ")]),_:1},8,["title","description"]),b,f,t("table",null,[p,t("tbody",null,[t("tr",null,[t("td",null,[n(o,{to:"/builtin/abs"},{default:e(()=>[l("abs()")]),_:1})]),m]),t("tr",null,[t("td",null,[n(o,{to:"/builtin/aiter"},{default:e(()=>[l("aiter()")]),_:1})]),y]),t("tr",null,[t("td",null,[n(o,{to:"/builtin/all"},{default:e(()=>[l("all()")]),_:1})]),g]),t("tr",null,[t("td",null,[n(o,{to:"/builtin/any"},{default:e(()=>[l("any()")]),_:1})]),R]),t("tr",null,[t("td",null,[n(o,{to:"/builtin/ascii"},{default:e(()=>[l("ascii()")]),_:1})]),v]),t("tr",null,[t("td",null,[n(o,{to:"/builtin/bin"},{default:e(()=>[l("bin()")]),_:1})]),j]),t("tr",null,[t("td",null,[n(o,{to:"/builtin/bool"},{default:e(()=>[l("bool()")]),_:1})]),w]),t("tr",null,[t("td",null,[n(o,{to:"/builtin/breakpoint"},{default:e(()=>[l("breakpoint()")]),_:1})]),P]),t("tr",null,[t("td",null,[n(o,{to:"/builtin/bytearray"},{default:e(()=>[l("bytearray()")]),_:1})]),x]),t("tr",null,[t("td",null,[n(o,{to:"/builtin/bytes"},{default:e(()=>[l("bytes()")]),_:1})]),T]),t("tr",null,[t("td",null,[n(o,{to:"/builtin/callable"},{default:e(()=>[l("callable()")]),_:1})]),C]),t("tr",null,[t("td",null,[n(o,{to:"/builtin/chr"},{default:e(()=>[l("chr()")]),_:1})]),k]),t("tr",null,[t("td",null,[n(o,{to:"/builtin/classmethod"},{default:e(()=>[l("classmethod()")]),_:1})]),B]),t("tr",null,[t("td",null,[n(o,{to:"/builtin/compile"},{default:e(()=>[l("compile()")]),_:1})]),z]),t("tr",null,[t("td",null,[n(o,{to:"/builtin/complex"},{default:e(()=>[l("complex()")]),_:1})]),q]),t("tr",null,[t("td",null,[n(o,{to:"/builtin/delattr"},{default:e(()=>[l("delattr()")]),_:1})]),F]),t("tr",null,[t("td",null,[n(o,{to:"/builtin/dict"},{default:e(()=>[l("dict()")]),_:1})]),D]),t("tr",null,[t("td",null,[n(o,{to:"/builtin/dir"},{default:e(()=>[l("dir()")]),_:1})]),N]),t("tr",null,[t("td",null,[n(o,{to:"/builtin/divmod"},{default:e(()=>[l("divmod()")]),_:1})]),V]),t("tr",null,[t("td",null,[n(o,{to:"/builtin/enumerate"},{default:e(()=>[l("enumerate()")]),_:1})]),E]),t("tr",null,[t("td",null,[n(o,{to:"/builtin/eval"},{default:e(()=>[l("eval()")]),_:1})]),I]),t("tr",null,[t("td",null,[n(o,{to:"/builtin/exec"},{default:e(()=>[l("exec()")]),_:1})]),S]),t("tr",null,[t("td",null,[n(o,{to:"/builtin/filter"},{default:e(()=>[l("filter()")]),_:1})]),U]),t("tr",null,[t("td",null,[n(o,{to:"/builtin/float"},{default:e(()=>[l("float()")]),_:1})]),A]),t("tr",null,[t("td",null,[n(o,{to:"/builtin/format"},{default:e(()=>[l("format()")]),_:1})]),H]),t("tr",null,[t("td",null,[n(o,{to:"/builtin/frozenset"},{default:e(()=>[l("frozenset()")]),_:1})]),O]),t("tr",null,[t("td",null,[n(o,{to:"/builtin/getattr"},{default:e(()=>[l("getattr()")]),_:1})]),G]),t("tr",null,[t("td",null,[n(o,{to:"/builtin/globals"},{default:e(()=>[l("globals()")]),_:1})]),J]),t("tr",null,[t("td",null,[n(o,{to:"/builtin/hasattr"},{default:e(()=>[l("hasattr()")]),_:1})]),K]),t("tr",null,[t("td",null,[n(o,{to:"/builtin/hash"},{default:e(()=>[l("hash()")]),_:1})]),L]),t("tr",null,[t("td",null,[n(o,{to:"/builtin/help"},{default:e(()=>[l("help()")]),_:1})]),M]),t("tr",null,[t("td",null,[n(o,{to:"/builtin/hex"},{default:e(()=>[l("hex()")]),_:1})]),Q]),t("tr",null,[t("td",null,[n(o,{to:"/builtin/id"},{default:e(()=>[l("id()")]),_:1})]),W]),t("tr",null,[t("td",null,[n(o,{to:"/builtin/input"},{default:e(()=>[l("input()")]),_:1})]),X]),t("tr",null,[t("td",null,[n(o,{to:"/builtin/int"},{default:e(()=>[l("int()")]),_:1})]),Y]),t("tr",null,[t("td",null,[n(o,{to:"/builtin/isinstance"},{default:e(()=>[l("isinstance()")]),_:1})]),Z]),t("tr",null,[t("td",null,[n(o,{to:"/builtin/issubclass"},{default:e(()=>[l("issubclass()")]),_:1})]),$]),t("tr",null,[t("td",null,[n(o,{to:"/builtin/iter"},{default:e(()=>[l("iter()")]),_:1})]),tt]),t("tr",null,[t("td",null,[n(o,{to:"/builtin/len"},{default:e(()=>[l("len()")]),_:1})]),nt]),t("tr",null,[t("td",null,[n(o,{to:"/builtin/list"},{default:e(()=>[l("list()")]),_:1})]),et]),t("tr",null,[t("td",null,[n(o,{to:"/builtin/locals"},{default:e(()=>[l("locals()")]),_:1})]),lt]),t("tr",null,[t("td",null,[n(o,{to:"/builtin/map"},{default:e(()=>[l("map()")]),_:1})]),ot]),t("tr",null,[t("td",null,[n(o,{to:"/builtin/max"},{default:e(()=>[l("max()")]),_:1})]),it]),t("tr",null,[t("td",null,[n(o,{to:"/builtin/min"},{default:e(()=>[l("min()")]),_:1})]),ut]),t("tr",null,[t("td",null,[n(o,{to:"/builtin/next"},{default:e(()=>[l("next()")]),_:1})]),at]),t("tr",null,[t("td",null,[n(o,{to:"/builtin/object"},{default:e(()=>[l("object()")]),_:1})]),rt]),t("tr",null,[t("td",null,[n(o,{to:"/builtin/oct"},{default:e(()=>[l("oct()")]),_:1})]),st]),t("tr",null,[t("td",null,[n(o,{to:"/builtin/open"},{default:e(()=>[l("open()")]),_:1})]),dt]),t("tr",null,[t("td",null,[n(o,{to:"/builtin/ord"},{default:e(()=>[l("ord()")]),_:1})]),ct]),t("tr",null,[t("td",null,[n(o,{to:"/builtin/pow"},{default:e(()=>[l("pow()")]),_:1})]),ht]),t("tr",null,[t("td",null,[n(o,{to:"/builtin/print"},{default:e(()=>[l("print()")]),_:1})]),_t]),t("tr",null,[t("td",null,[n(o,{to:"/builtin/property"},{default:e(()=>[l("property()")]),_:1})]),bt]),t("tr",null,[t("td",null,[n(o,{to:"/builtin/repr"},{default:e(()=>[l("repr()")]),_:1})]),ft]),t("tr",null,[t("td",null,[n(o,{to:"/builtin/reversed"},{default:e(()=>[l("reversed()")]),_:1})]),pt]),t("tr",null,[t("td",null,[n(o,{to:"/builtin/round"},{default:e(()=>[l("round()")]),_:1})]),mt]),t("tr",null,[t("td",null,[n(o,{to:"/builtin/set"},{default:e(()=>[l("set()")]),_:1})]),yt]),t("tr",null,[t("td",null,[n(o,{to:"/builtin/setattr"},{default:e(()=>[l("setattr()")]),_:1})]),gt]),t("tr",null,[t("td",null,[n(o,{to:"/builtin/slice"},{default:e(()=>[l("slice()")]),_:1})]),Rt]),t("tr",null,[t("td",null,[n(o,{to:"/builtin/sorted"},{default:e(()=>[l("sorted()")]),_:1})]),vt]),t("tr",null,[t("td",null,[n(o,{to:"/builtin/staticmethod"},{default:e(()=>[l("staticmethod()")]),_:1})]),jt]),t("tr",null,[t("td",null,[n(o,{to:"/builtin/str"},{default:e(()=>[l("str()")]),_:1})]),wt]),t("tr",null,[t("td",null,[n(o,{to:"/builtin/sum"},{default:e(()=>[l("sum()")]),_:1})]),Pt]),t("tr",null,[t("td",null,[n(o,{to:"/builtin/super"},{default:e(()=>[l("super()")]),_:1})]),xt]),t("tr",null,[t("td",null,[n(o,{to:"/builtin/tuple"},{default:e(()=>[l("tuple()")]),_:1})]),Tt]),t("tr",null,[t("td",null,[n(o,{to:"/builtin/type"},{default:e(()=>[l("type()")]),_:1})]),Ct]),t("tr",null,[t("td",null,[n(o,{to:"/builtin/vars"},{default:e(()=>[l("vars()")]),_:1})]),kt]),t("tr",null,[t("td",null,[n(o,{to:"/builtin/zip"},{default:e(()=>[l("zip()")]),_:1})]),Bt]),t("tr",null,[t("td",null,[n(o,{to:"/builtin/import"},{default:e(()=>[zt,l("()")]),_:1})]),qt])])])])}}};export{At as default,St as description,Ut as meta,It as title};
